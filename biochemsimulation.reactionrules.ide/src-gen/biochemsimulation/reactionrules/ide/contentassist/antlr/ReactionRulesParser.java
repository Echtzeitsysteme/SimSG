/*
 * generated by Xtext 2.12.0
 */
package biochemsimulation.reactionrules.ide.contentassist.antlr;

import biochemsimulation.reactionrules.ide.contentassist.antlr.internal.InternalReactionRulesParser;
import biochemsimulation.reactionrules.services.ReactionRulesGrammarAccess;
import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class ReactionRulesParser extends AbstractContentAssistParser {

	@Inject
	private ReactionRulesGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalReactionRulesParser createParser() {
		InternalReactionRulesParser result = new InternalReactionRulesParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getReactionPropertyAccess().getAlternatives(), "rule__ReactionProperty__Alternatives");
					put(grammarAccess.getLinkStateAccess().getAlternatives(), "rule__LinkState__Alternatives");
					put(grammarAccess.getRuleAccess().getAlternatives_3(), "rule__Rule__Alternatives_3");
					put(grammarAccess.getFloatAccess().getGroup(), "rule__Float__Group__0");
					put(grammarAccess.getStatesAccess().getGroup(), "rule__States__Group__0");
					put(grammarAccess.getStatesAccess().getGroup_1(), "rule__States__Group_1__0");
					put(grammarAccess.getStatesAccess().getGroup_1_2(), "rule__States__Group_1_2__0");
					put(grammarAccess.getSiteAccess().getGroup(), "rule__Site__Group__0");
					put(grammarAccess.getSitesAccess().getGroup(), "rule__Sites__Group__0");
					put(grammarAccess.getSitesAccess().getGroup_1(), "rule__Sites__Group_1__0");
					put(grammarAccess.getSitesAccess().getGroup_1_2(), "rule__Sites__Group_1_2__0");
					put(grammarAccess.getAgentAccess().getGroup(), "rule__Agent__Group__0");
					put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
					put(grammarAccess.getSemiLinkAccess().getGroup(), "rule__SemiLink__Group__0");
					put(grammarAccess.getFreeLinkAccess().getGroup(), "rule__FreeLink__Group__0");
					put(grammarAccess.getLimitLinkAccess().getGroup(), "rule__LimitLink__Group__0");
					put(grammarAccess.getExactLinkAccess().getGroup(), "rule__ExactLink__Group__0");
					put(grammarAccess.getSitePatternAccess().getGroup(), "rule__SitePattern__Group__0");
					put(grammarAccess.getSitePatternAccess().getGroup_2(), "rule__SitePattern__Group_2__0");
					put(grammarAccess.getSitePatternAccess().getGroup_3(), "rule__SitePattern__Group_3__0");
					put(grammarAccess.getAgentPatternAccess().getGroup(), "rule__AgentPattern__Group__0");
					put(grammarAccess.getAgentPatternAccess().getGroup_3(), "rule__AgentPattern__Group_3__0");
					put(grammarAccess.getAgentPatternAccess().getGroup_3_1(), "rule__AgentPattern__Group_3_1__0");
					put(grammarAccess.getPatternAccess().getGroup(), "rule__Pattern__Group__0");
					put(grammarAccess.getPatternAccess().getGroup_1(), "rule__Pattern__Group_1__0");
					put(grammarAccess.getPatternAccess().getGroup_1_1(), "rule__Pattern__Group_1_1__0");
					put(grammarAccess.getObservationAccess().getGroup(), "rule__Observation__Group__0");
					put(grammarAccess.getInitialAccess().getGroup(), "rule__Initial__Group__0");
					put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
					put(grammarAccess.getRuleAccess().getGroup_7(), "rule__Rule__Group_7__0");
					put(grammarAccess.getReactionRuleModelAccess().getReactionPropertiesAssignment(), "rule__ReactionRuleModel__ReactionPropertiesAssignment");
					put(grammarAccess.getStateAccess().getNameAssignment(), "rule__State__NameAssignment");
					put(grammarAccess.getStatesAccess().getStateAssignment_1_1(), "rule__States__StateAssignment_1_1");
					put(grammarAccess.getStatesAccess().getStateAssignment_1_2_1(), "rule__States__StateAssignment_1_2_1");
					put(grammarAccess.getSiteAccess().getNameAssignment_0(), "rule__Site__NameAssignment_0");
					put(grammarAccess.getSiteAccess().getStatesAssignment_1(), "rule__Site__StatesAssignment_1");
					put(grammarAccess.getSitesAccess().getSitesAssignment_1_1(), "rule__Sites__SitesAssignment_1_1");
					put(grammarAccess.getSitesAccess().getSitesAssignment_1_2_1(), "rule__Sites__SitesAssignment_1_2_1");
					put(grammarAccess.getAgentAccess().getNameAssignment_1(), "rule__Agent__NameAssignment_1");
					put(grammarAccess.getAgentAccess().getSitesAssignment_2(), "rule__Agent__SitesAssignment_2");
					put(grammarAccess.getVariableAccess().getNameAssignment_1(), "rule__Variable__NameAssignment_1");
					put(grammarAccess.getVariableAccess().getValueAssignment_3(), "rule__Variable__ValueAssignment_3");
					put(grammarAccess.getLimitLinkAccess().getStateAssignment_1(), "rule__LimitLink__StateAssignment_1");
					put(grammarAccess.getExactLinkAccess().getSiteAssignment_1(), "rule__ExactLink__SiteAssignment_1");
					put(grammarAccess.getExactLinkAccess().getAgentAssignment_3(), "rule__ExactLink__AgentAssignment_3");
					put(grammarAccess.getSitePatternAccess().getSiteAssignment_1(), "rule__SitePattern__SiteAssignment_1");
					put(grammarAccess.getSitePatternAccess().getStateAssignment_2_1(), "rule__SitePattern__StateAssignment_2_1");
					put(grammarAccess.getSitePatternAccess().getLinkStateAssignment_3_1(), "rule__SitePattern__LinkStateAssignment_3_1");
					put(grammarAccess.getAgentPatternAccess().getAgentAssignment_1(), "rule__AgentPattern__AgentAssignment_1");
					put(grammarAccess.getAgentPatternAccess().getSitePatternsAssignment_3_0(), "rule__AgentPattern__SitePatternsAssignment_3_0");
					put(grammarAccess.getAgentPatternAccess().getSitePatternsAssignment_3_1_1(), "rule__AgentPattern__SitePatternsAssignment_3_1_1");
					put(grammarAccess.getPatternAccess().getAgentPatternsAssignment_1_0(), "rule__Pattern__AgentPatternsAssignment_1_0");
					put(grammarAccess.getPatternAccess().getAgentPatternsAssignment_1_1_1(), "rule__Pattern__AgentPatternsAssignment_1_1_1");
					put(grammarAccess.getObservationAccess().getNameAssignment_1(), "rule__Observation__NameAssignment_1");
					put(grammarAccess.getObservationAccess().getObservationPatternAssignment_2(), "rule__Observation__ObservationPatternAssignment_2");
					put(grammarAccess.getInitialAccess().getNameAssignment_1(), "rule__Initial__NameAssignment_1");
					put(grammarAccess.getInitialAccess().getCountAssignment_2(), "rule__Initial__CountAssignment_2");
					put(grammarAccess.getInitialAccess().getInitialPatternAssignment_3(), "rule__Initial__InitialPatternAssignment_3");
					put(grammarAccess.getRuleAccess().getNameAssignment_1(), "rule__Rule__NameAssignment_1");
					put(grammarAccess.getRuleAccess().getLhsAssignment_2(), "rule__Rule__LhsAssignment_2");
					put(grammarAccess.getRuleAccess().getRhsAssignment_4(), "rule__Rule__RhsAssignment_4");
					put(grammarAccess.getRuleAccess().getVariablesAssignment_6(), "rule__Rule__VariablesAssignment_6");
					put(grammarAccess.getRuleAccess().getVariablesAssignment_7_1(), "rule__Rule__VariablesAssignment_7_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ReactionRulesGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ReactionRulesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
