/*
 * generated by Xtext 2.12.0
 */
grammar InternalReactionRules;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package biochemsimulation.reactionrules.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package biochemsimulation.reactionrules.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import biochemsimulation.reactionrules.services.ReactionRulesGrammarAccess;

}
@parser::members {
	private ReactionRulesGrammarAccess grammarAccess;

	public void setGrammarAccess(ReactionRulesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleReactionRuleModel
entryRuleReactionRuleModel
:
{ before(grammarAccess.getReactionRuleModelRule()); }
	 ruleReactionRuleModel
{ after(grammarAccess.getReactionRuleModelRule()); } 
	 EOF 
;

// Rule ReactionRuleModel
ruleReactionRuleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReactionRuleModelAccess().getGroup()); }
		(rule__ReactionRuleModel__Group__0)
		{ after(grammarAccess.getReactionRuleModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelUri
entryRuleModelUri
:
{ before(grammarAccess.getModelUriRule()); }
	 ruleModelUri
{ after(grammarAccess.getModelUriRule()); } 
	 EOF 
;

// Rule ModelUri
ruleModelUri 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelUriAccess().getGroup()); }
		(rule__ModelUri__Group__0)
		{ after(grammarAccess.getModelUriAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelPath
entryRuleModelPath
:
{ before(grammarAccess.getModelPathRule()); }
	 ruleModelPath
{ after(grammarAccess.getModelPathRule()); } 
	 EOF 
;

// Rule ModelPath
ruleModelPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelPathAccess().getGroup()); }
		(rule__ModelPath__Group__0)
		{ after(grammarAccess.getModelPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelLocation
entryRuleModelLocation
:
{ before(grammarAccess.getModelLocationRule()); }
	 ruleModelLocation
{ after(grammarAccess.getModelLocationRule()); } 
	 EOF 
;

// Rule ModelLocation
ruleModelLocation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelLocationAccess().getAlternatives()); }
		(rule__ModelLocation__Alternatives)
		{ after(grammarAccess.getModelLocationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReactionContainer
entryRuleReactionContainer
:
{ before(grammarAccess.getReactionContainerRule()); }
	 ruleReactionContainer
{ after(grammarAccess.getReactionContainerRule()); } 
	 EOF 
;

// Rule ReactionContainer
ruleReactionContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReactionContainerAccess().getGroup()); }
		(rule__ReactionContainer__Group__0)
		{ after(grammarAccess.getReactionContainerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAgentInstanceSiteState
entryRuleAgentInstanceSiteState
:
{ before(grammarAccess.getAgentInstanceSiteStateRule()); }
	 ruleAgentInstanceSiteState
{ after(grammarAccess.getAgentInstanceSiteStateRule()); } 
	 EOF 
;

// Rule AgentInstanceSiteState
ruleAgentInstanceSiteState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAgentInstanceSiteStateAccess().getGroup()); }
		(rule__AgentInstanceSiteState__Group__0)
		{ after(grammarAccess.getAgentInstanceSiteStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAgentInstanceLinkState
entryRuleAgentInstanceLinkState
:
{ before(grammarAccess.getAgentInstanceLinkStateRule()); }
	 ruleAgentInstanceLinkState
{ after(grammarAccess.getAgentInstanceLinkStateRule()); } 
	 EOF 
;

// Rule AgentInstanceLinkState
ruleAgentInstanceLinkState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAgentInstanceLinkStateAccess().getGroup()); }
		(rule__AgentInstanceLinkState__Group__0)
		{ after(grammarAccess.getAgentInstanceLinkStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAgentInstance
entryRuleAgentInstance
:
{ before(grammarAccess.getAgentInstanceRule()); }
	 ruleAgentInstance
{ after(grammarAccess.getAgentInstanceRule()); } 
	 EOF 
;

// Rule AgentInstance
ruleAgentInstance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAgentInstanceAccess().getGroup()); }
		(rule__AgentInstance__Group__0)
		{ after(grammarAccess.getAgentInstanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReactionProperty
entryRuleReactionProperty
:
{ before(grammarAccess.getReactionPropertyRule()); }
	 ruleReactionProperty
{ after(grammarAccess.getReactionPropertyRule()); } 
	 EOF 
;

// Rule ReactionProperty
ruleReactionProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReactionPropertyAccess().getAlternatives()); }
		(rule__ReactionProperty__Alternatives)
		{ after(grammarAccess.getReactionPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloat
entryRuleFloat
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getFloatRule()); }
	 ruleFloat
{ after(grammarAccess.getFloatRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Float
ruleFloat 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatAccess().getGroup()); }
		(rule__Float__Group__0)
		{ after(grammarAccess.getFloatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleScientificFloat
entryRuleScientificFloat
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getScientificFloatRule()); }
	 ruleScientificFloat
{ after(grammarAccess.getScientificFloatRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ScientificFloat
ruleScientificFloat 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScientificFloatAccess().getGroup()); }
		(rule__ScientificFloat__Group__0)
		{ after(grammarAccess.getScientificFloatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleUnsignedInteger
entryRuleUnsignedInteger
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getUnsignedIntegerRule()); }
	 ruleUnsignedInteger
{ after(grammarAccess.getUnsignedIntegerRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule UnsignedInteger
ruleUnsignedInteger 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnsignedIntegerAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getUnsignedIntegerAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSignedInteger
entryRuleSignedInteger
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getSignedIntegerRule()); }
	 ruleSignedInteger
{ after(grammarAccess.getSignedIntegerRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SignedInteger
ruleSignedInteger 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignedIntegerAccess().getGroup()); }
		(rule__SignedInteger__Group__0)
		{ after(grammarAccess.getSignedIntegerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleArithmeticType
entryRuleArithmeticType
:
{ before(grammarAccess.getArithmeticTypeRule()); }
	 ruleArithmeticType
{ after(grammarAccess.getArithmeticTypeRule()); } 
	 EOF 
;

// Rule ArithmeticType
ruleArithmeticType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticTypeAccess().getAlternatives()); }
		(rule__ArithmeticType__Alternatives)
		{ after(grammarAccess.getArithmeticTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticValue
entryRuleArithmeticValue
:
{ before(grammarAccess.getArithmeticValueRule()); }
	 ruleArithmeticValue
{ after(grammarAccess.getArithmeticValueRule()); } 
	 EOF 
;

// Rule ArithmeticValue
ruleArithmeticValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticValueAccess().getValueAssignment()); }
		(rule__ArithmeticValue__ValueAssignment)
		{ after(grammarAccess.getArithmeticValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getNameAssignment()); }
		(rule__State__NameAssignment)
		{ after(grammarAccess.getStateAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStates
entryRuleStates
:
{ before(grammarAccess.getStatesRule()); }
	 ruleStates
{ after(grammarAccess.getStatesRule()); } 
	 EOF 
;

// Rule States
ruleStates 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatesAccess().getGroup()); }
		(rule__States__Group__0)
		{ after(grammarAccess.getStatesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSite
entryRuleSite
:
{ before(grammarAccess.getSiteRule()); }
	 ruleSite
{ after(grammarAccess.getSiteRule()); } 
	 EOF 
;

// Rule Site
ruleSite 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSiteAccess().getGroup()); }
		(rule__Site__Group__0)
		{ after(grammarAccess.getSiteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSites
entryRuleSites
:
{ before(grammarAccess.getSitesRule()); }
	 ruleSites
{ after(grammarAccess.getSitesRule()); } 
	 EOF 
;

// Rule Sites
ruleSites 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSitesAccess().getGroup()); }
		(rule__Sites__Group__0)
		{ after(grammarAccess.getSitesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAgent
entryRuleAgent
:
{ before(grammarAccess.getAgentRule()); }
	 ruleAgent
{ after(grammarAccess.getAgentRule()); } 
	 EOF 
;

// Rule Agent
ruleAgent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAgentAccess().getGroup()); }
		(rule__Agent__Group__0)
		{ after(grammarAccess.getAgentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternVariable
entryRulePatternVariable
:
{ before(grammarAccess.getPatternVariableRule()); }
	 rulePatternVariable
{ after(grammarAccess.getPatternVariableRule()); } 
	 EOF 
;

// Rule PatternVariable
rulePatternVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternVariableAccess().getGroup()); }
		(rule__PatternVariable__Group__0)
		{ after(grammarAccess.getPatternVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticVariable
entryRuleArithmeticVariable
:
{ before(grammarAccess.getArithmeticVariableRule()); }
	 ruleArithmeticVariable
{ after(grammarAccess.getArithmeticVariableRule()); } 
	 EOF 
;

// Rule ArithmeticVariable
ruleArithmeticVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticVariableAccess().getGroup()); }
		(rule__ArithmeticVariable__Group__0)
		{ after(grammarAccess.getArithmeticVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getAlternatives()); }
		(rule__Variable__Alternatives)
		{ after(grammarAccess.getVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSemiLink
entryRuleSemiLink
:
{ before(grammarAccess.getSemiLinkRule()); }
	 ruleSemiLink
{ after(grammarAccess.getSemiLinkRule()); } 
	 EOF 
;

// Rule SemiLink
ruleSemiLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSemiLinkAccess().getGroup()); }
		(rule__SemiLink__Group__0)
		{ after(grammarAccess.getSemiLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFreeLink
entryRuleFreeLink
:
{ before(grammarAccess.getFreeLinkRule()); }
	 ruleFreeLink
{ after(grammarAccess.getFreeLinkRule()); } 
	 EOF 
;

// Rule FreeLink
ruleFreeLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFreeLinkAccess().getGroup()); }
		(rule__FreeLink__Group__0)
		{ after(grammarAccess.getFreeLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhatEver
entryRuleWhatEver
:
{ before(grammarAccess.getWhatEverRule()); }
	 ruleWhatEver
{ after(grammarAccess.getWhatEverRule()); } 
	 EOF 
;

// Rule WhatEver
ruleWhatEver 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhatEverAccess().getGroup()); }
		(rule__WhatEver__Group__0)
		{ after(grammarAccess.getWhatEverAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexedLink
entryRuleIndexedLink
:
{ before(grammarAccess.getIndexedLinkRule()); }
	 ruleIndexedLink
{ after(grammarAccess.getIndexedLinkRule()); } 
	 EOF 
;

// Rule IndexedLink
ruleIndexedLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexedLinkAccess().getGroup()); }
		(rule__IndexedLink__Group__0)
		{ after(grammarAccess.getIndexedLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExactLinkAgent
entryRuleExactLinkAgent
:
{ before(grammarAccess.getExactLinkAgentRule()); }
	 ruleExactLinkAgent
{ after(grammarAccess.getExactLinkAgentRule()); } 
	 EOF 
;

// Rule ExactLinkAgent
ruleExactLinkAgent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExactLinkAgentAccess().getGroup()); }
		(rule__ExactLinkAgent__Group__0)
		{ after(grammarAccess.getExactLinkAgentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExactLinkSite
entryRuleExactLinkSite
:
{ before(grammarAccess.getExactLinkSiteRule()); }
	 ruleExactLinkSite
{ after(grammarAccess.getExactLinkSiteRule()); } 
	 EOF 
;

// Rule ExactLinkSite
ruleExactLinkSite 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExactLinkSiteAccess().getGroup()); }
		(rule__ExactLinkSite__Group__0)
		{ after(grammarAccess.getExactLinkSiteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExactLink
entryRuleExactLink
:
{ before(grammarAccess.getExactLinkRule()); }
	 ruleExactLink
{ after(grammarAccess.getExactLinkRule()); } 
	 EOF 
;

// Rule ExactLink
ruleExactLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExactLinkAccess().getGroup()); }
		(rule__ExactLink__Group__0)
		{ after(grammarAccess.getExactLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSiteState
entryRuleSiteState
:
{ before(grammarAccess.getSiteStateRule()); }
	 ruleSiteState
{ after(grammarAccess.getSiteStateRule()); } 
	 EOF 
;

// Rule SiteState
ruleSiteState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSiteStateAccess().getGroup()); }
		(rule__SiteState__Group__0)
		{ after(grammarAccess.getSiteStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLinkState
entryRuleLinkState
:
{ before(grammarAccess.getLinkStateRule()); }
	 ruleLinkState
{ after(grammarAccess.getLinkStateRule()); } 
	 EOF 
;

// Rule LinkState
ruleLinkState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkStateAccess().getGroup()); }
		(rule__LinkState__Group__0)
		{ after(grammarAccess.getLinkStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSitePattern
entryRuleSitePattern
:
{ before(grammarAccess.getSitePatternRule()); }
	 ruleSitePattern
{ after(grammarAccess.getSitePatternRule()); } 
	 EOF 
;

// Rule SitePattern
ruleSitePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSitePatternAccess().getGroup()); }
		(rule__SitePattern__Group__0)
		{ after(grammarAccess.getSitePatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSitePatterns
entryRuleSitePatterns
:
{ before(grammarAccess.getSitePatternsRule()); }
	 ruleSitePatterns
{ after(grammarAccess.getSitePatternsRule()); } 
	 EOF 
;

// Rule SitePatterns
ruleSitePatterns 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSitePatternsAccess().getGroup()); }
		(rule__SitePatterns__Group__0)
		{ after(grammarAccess.getSitePatternsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAgentPattern
entryRuleAgentPattern
:
{ before(grammarAccess.getAgentPatternRule()); }
	 ruleAgentPattern
{ after(grammarAccess.getAgentPatternRule()); } 
	 EOF 
;

// Rule AgentPattern
ruleAgentPattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAgentPatternAccess().getGroup()); }
		(rule__AgentPattern__Group__0)
		{ after(grammarAccess.getAgentPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePattern
entryRulePattern
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAccess().getGroup()); }
		(rule__Pattern__Group__0)
		{ after(grammarAccess.getPatternAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObservation
entryRuleObservation
:
{ before(grammarAccess.getObservationRule()); }
	 ruleObservation
{ after(grammarAccess.getObservationRule()); } 
	 EOF 
;

// Rule Observation
ruleObservation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObservationAccess().getGroup()); }
		(rule__Observation__Group__0)
		{ after(grammarAccess.getObservationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericFromLiteral
entryRuleNumericFromLiteral
:
{ before(grammarAccess.getNumericFromLiteralRule()); }
	 ruleNumericFromLiteral
{ after(grammarAccess.getNumericFromLiteralRule()); } 
	 EOF 
;

// Rule NumericFromLiteral
ruleNumericFromLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericFromLiteralAccess().getValueAssignment()); }
		(rule__NumericFromLiteral__ValueAssignment)
		{ after(grammarAccess.getNumericFromLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericFromVariable
entryRuleNumericFromVariable
:
{ before(grammarAccess.getNumericFromVariableRule()); }
	 ruleNumericFromVariable
{ after(grammarAccess.getNumericFromVariableRule()); } 
	 EOF 
;

// Rule NumericFromVariable
ruleNumericFromVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericFromVariableAccess().getValueVarAssignment()); }
		(rule__NumericFromVariable__ValueVarAssignment)
		{ after(grammarAccess.getNumericFromVariableAccess().getValueVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericAssignment
entryRuleNumericAssignment
:
{ before(grammarAccess.getNumericAssignmentRule()); }
	 ruleNumericAssignment
{ after(grammarAccess.getNumericAssignmentRule()); } 
	 EOF 
;

// Rule NumericAssignment
ruleNumericAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericAssignmentAccess().getAlternatives()); }
		(rule__NumericAssignment__Alternatives)
		{ after(grammarAccess.getNumericAssignmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitial
entryRuleInitial
:
{ before(grammarAccess.getInitialRule()); }
	 ruleInitial
{ after(grammarAccess.getInitialRule()); } 
	 EOF 
;

// Rule Initial
ruleInitial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialAccess().getGroup()); }
		(rule__Initial__Group__0)
		{ after(grammarAccess.getInitialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignFromPattern
entryRuleAssignFromPattern
:
{ before(grammarAccess.getAssignFromPatternRule()); }
	 ruleAssignFromPattern
{ after(grammarAccess.getAssignFromPatternRule()); } 
	 EOF 
;

// Rule AssignFromPattern
ruleAssignFromPattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignFromPatternAccess().getPatternAssignment()); }
		(rule__AssignFromPattern__PatternAssignment)
		{ after(grammarAccess.getAssignFromPatternAccess().getPatternAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignFromVariable
entryRuleAssignFromVariable
:
{ before(grammarAccess.getAssignFromVariableRule()); }
	 ruleAssignFromVariable
{ after(grammarAccess.getAssignFromVariableRule()); } 
	 EOF 
;

// Rule AssignFromVariable
ruleAssignFromVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignFromVariableAccess().getPatternVarAssignment()); }
		(rule__AssignFromVariable__PatternVarAssignment)
		{ after(grammarAccess.getAssignFromVariableAccess().getPatternVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternAssignment
entryRulePatternAssignment
:
{ before(grammarAccess.getPatternAssignmentRule()); }
	 rulePatternAssignment
{ after(grammarAccess.getPatternAssignmentRule()); } 
	 EOF 
;

// Rule PatternAssignment
rulePatternAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAssignmentAccess().getAlternatives()); }
		(rule__PatternAssignment__Alternatives)
		{ after(grammarAccess.getPatternAssignmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleVariables
entryRuleRuleVariables
:
{ before(grammarAccess.getRuleVariablesRule()); }
	 ruleRuleVariables
{ after(grammarAccess.getRuleVariablesRule()); } 
	 EOF 
;

// Rule RuleVariables
ruleRuleVariables 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleVariablesAccess().getGroup()); }
		(rule__RuleVariables__Group__0)
		{ after(grammarAccess.getRuleVariablesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnidirectionalRule
entryRuleUnidirectionalRule
:
{ before(grammarAccess.getUnidirectionalRuleRule()); }
	 ruleUnidirectionalRule
{ after(grammarAccess.getUnidirectionalRuleRule()); } 
	 EOF 
;

// Rule UnidirectionalRule
ruleUnidirectionalRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnidirectionalRuleAccess().getGroup()); }
		(rule__UnidirectionalRule__Group__0)
		{ after(grammarAccess.getUnidirectionalRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBidirectionalRule
entryRuleBidirectionalRule
:
{ before(grammarAccess.getBidirectionalRuleRule()); }
	 ruleBidirectionalRule
{ after(grammarAccess.getBidirectionalRuleRule()); } 
	 EOF 
;

// Rule BidirectionalRule
ruleBidirectionalRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBidirectionalRuleAccess().getGroup()); }
		(rule__BidirectionalRule__Group__0)
		{ after(grammarAccess.getBidirectionalRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleBody
entryRuleRuleBody
:
{ before(grammarAccess.getRuleBodyRule()); }
	 ruleRuleBody
{ after(grammarAccess.getRuleBodyRule()); } 
	 EOF 
;

// Rule RuleBody
ruleRuleBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleBodyAccess().getAlternatives()); }
		(rule__RuleBody__Alternatives)
		{ after(grammarAccess.getRuleBodyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelLocation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelLocationAccess().getModelUriParserRuleCall_0()); }
		ruleModelUri
		{ after(grammarAccess.getModelLocationAccess().getModelUriParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelLocationAccess().getModelPathParserRuleCall_1()); }
		ruleModelPath
		{ after(grammarAccess.getModelLocationAccess().getModelPathParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionProperty__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionPropertyAccess().getAgentParserRuleCall_0()); }
		ruleAgent
		{ after(grammarAccess.getReactionPropertyAccess().getAgentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getReactionPropertyAccess().getVariableParserRuleCall_1()); }
		ruleVariable
		{ after(grammarAccess.getReactionPropertyAccess().getVariableParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getReactionPropertyAccess().getObservationParserRuleCall_2()); }
		ruleObservation
		{ after(grammarAccess.getReactionPropertyAccess().getObservationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getReactionPropertyAccess().getInitialParserRuleCall_3()); }
		ruleInitial
		{ after(grammarAccess.getReactionPropertyAccess().getInitialParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getReactionPropertyAccess().getRuleParserRuleCall_4()); }
		ruleRule
		{ after(grammarAccess.getReactionPropertyAccess().getRuleParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScientificFloatAccess().getHyphenMinusKeyword_5_0()); }
		'-'
		{ after(grammarAccess.getScientificFloatAccess().getHyphenMinusKeyword_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getScientificFloatAccess().getPlusSignKeyword_5_1()); }
		'+'
		{ after(grammarAccess.getScientificFloatAccess().getPlusSignKeyword_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticTypeAccess().getFloatParserRuleCall_0()); }
		ruleFloat
		{ after(grammarAccess.getArithmeticTypeAccess().getFloatParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticTypeAccess().getUnsignedIntegerParserRuleCall_1()); }
		ruleUnsignedInteger
		{ after(grammarAccess.getArithmeticTypeAccess().getUnsignedIntegerParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticTypeAccess().getSignedIntegerParserRuleCall_2()); }
		ruleSignedInteger
		{ after(grammarAccess.getArithmeticTypeAccess().getSignedIntegerParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getArithmeticTypeAccess().getScientificFloatParserRuleCall_3()); }
		ruleScientificFloat
		{ after(grammarAccess.getArithmeticTypeAccess().getScientificFloatParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getPatternVariableParserRuleCall_0()); }
		rulePatternVariable
		{ after(grammarAccess.getVariableAccess().getPatternVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getArithmeticVariableParserRuleCall_1()); }
		ruleArithmeticVariable
		{ after(grammarAccess.getVariableAccess().getArithmeticVariableParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkState__LinkStateAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkStateAccess().getLinkStateSemiLinkParserRuleCall_1_0_0()); }
		ruleSemiLink
		{ after(grammarAccess.getLinkStateAccess().getLinkStateSemiLinkParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLinkStateAccess().getLinkStateFreeLinkParserRuleCall_1_0_1()); }
		ruleFreeLink
		{ after(grammarAccess.getLinkStateAccess().getLinkStateFreeLinkParserRuleCall_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getLinkStateAccess().getLinkStateExactLinkParserRuleCall_1_0_2()); }
		ruleExactLink
		{ after(grammarAccess.getLinkStateAccess().getLinkStateExactLinkParserRuleCall_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getLinkStateAccess().getLinkStateIndexedLinkParserRuleCall_1_0_3()); }
		ruleIndexedLink
		{ after(grammarAccess.getLinkStateAccess().getLinkStateIndexedLinkParserRuleCall_1_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getLinkStateAccess().getLinkStateWhatEverParserRuleCall_1_0_4()); }
		ruleWhatEver
		{ after(grammarAccess.getLinkStateAccess().getLinkStateWhatEverParserRuleCall_1_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericAssignment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericAssignmentAccess().getNumericFromLiteralParserRuleCall_0()); }
		ruleNumericFromLiteral
		{ after(grammarAccess.getNumericAssignmentAccess().getNumericFromLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericAssignmentAccess().getNumericFromVariableParserRuleCall_1()); }
		ruleNumericFromVariable
		{ after(grammarAccess.getNumericAssignmentAccess().getNumericFromVariableParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternAssignment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAssignmentAccess().getAssignFromPatternParserRuleCall_0()); }
		ruleAssignFromPattern
		{ after(grammarAccess.getPatternAssignmentAccess().getAssignFromPatternParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternAssignmentAccess().getAssignFromVariableParserRuleCall_1()); }
		ruleAssignFromVariable
		{ after(grammarAccess.getPatternAssignmentAccess().getAssignFromVariableParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleBody__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleBodyAccess().getUnidirectionalRuleParserRuleCall_0()); }
		ruleUnidirectionalRule
		{ after(grammarAccess.getRuleBodyAccess().getUnidirectionalRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleBodyAccess().getBidirectionalRuleParserRuleCall_1()); }
		ruleBidirectionalRule
		{ after(grammarAccess.getRuleBodyAccess().getBidirectionalRuleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionRuleModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReactionRuleModel__Group__0__Impl
	rule__ReactionRuleModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionRuleModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionRuleModelAccess().getModelAssignment_0()); }
	(rule__ReactionRuleModel__ModelAssignment_0)
	{ after(grammarAccess.getReactionRuleModelAccess().getModelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionRuleModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReactionRuleModel__Group__1__Impl
	rule__ReactionRuleModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionRuleModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionRuleModelAccess().getReactionContainerAssignment_1()); }
	(rule__ReactionRuleModel__ReactionContainerAssignment_1)
	{ after(grammarAccess.getReactionRuleModelAccess().getReactionContainerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionRuleModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReactionRuleModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionRuleModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionRuleModelAccess().getReactionPropertiesAssignment_2()); }
	(rule__ReactionRuleModel__ReactionPropertiesAssignment_2)*
	{ after(grammarAccess.getReactionRuleModelAccess().getReactionPropertiesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelUri__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelUri__Group__0__Impl
	rule__ModelUri__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelUri__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelUriAccess().getURIKeyword_0()); }
	'URI'
	{ after(grammarAccess.getModelUriAccess().getURIKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelUri__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelUri__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelUri__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelUriAccess().getUriAssignment_1()); }
	(rule__ModelUri__UriAssignment_1)
	{ after(grammarAccess.getModelUriAccess().getUriAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelPath__Group__0__Impl
	rule__ModelPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPathAccess().getPATHKeyword_0()); }
	'PATH'
	{ after(grammarAccess.getModelPathAccess().getPATHKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelPath__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelPathAccess().getPathAssignment_1()); }
	(rule__ModelPath__PathAssignment_1)
	{ after(grammarAccess.getModelPathAccess().getPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelIDKeyword_0()); }
	'ModelID'
	{ after(grammarAccess.getModelAccess().getModelIDKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLocationAssignment_2()); }
	(rule__Model__LocationAssignment_2)?
	{ after(grammarAccess.getModelAccess().getLocationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReactionContainer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReactionContainer__Group__0__Impl
	rule__ReactionContainer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionContainer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionContainerAccess().getReactionContainerAction_0()); }
	()
	{ after(grammarAccess.getReactionContainerAccess().getReactionContainerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionContainer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReactionContainer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionContainer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionContainerAccess().getAgentInstancesAssignment_1()); }
	(rule__ReactionContainer__AgentInstancesAssignment_1)*
	{ after(grammarAccess.getReactionContainerAccess().getAgentInstancesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AgentInstanceSiteState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstanceSiteState__Group__0__Impl
	rule__AgentInstanceSiteState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceSiteState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceSiteStateAccess().getSiteAssignment_0()); }
	(rule__AgentInstanceSiteState__SiteAssignment_0)
	{ after(grammarAccess.getAgentInstanceSiteStateAccess().getSiteAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceSiteState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstanceSiteState__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceSiteState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceSiteStateAccess().getSiteStateAssignment_1()); }
	(rule__AgentInstanceSiteState__SiteStateAssignment_1)
	{ after(grammarAccess.getAgentInstanceSiteStateAccess().getSiteStateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AgentInstanceLinkState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstanceLinkState__Group__0__Impl
	rule__AgentInstanceLinkState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceLinkStateAccess().getSiteAssignment_0()); }
	(rule__AgentInstanceLinkState__SiteAssignment_0)
	{ after(grammarAccess.getAgentInstanceLinkStateAccess().getSiteAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstanceLinkState__Group__1__Impl
	rule__AgentInstanceLinkState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedSiteAssignment_1()); }
	(rule__AgentInstanceLinkState__AttachedSiteAssignment_1)
	{ after(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedSiteAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstanceLinkState__Group__2__Impl
	rule__AgentInstanceLinkState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentAssignment_2()); }
	(rule__AgentInstanceLinkState__AttachedAgentAssignment_2)
	{ after(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstanceLinkState__Group__3__Impl
	rule__AgentInstanceLinkState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentInstanceAssignment_3()); }
	(rule__AgentInstanceLinkState__AttachedAgentInstanceAssignment_3)
	{ after(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentInstanceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstanceLinkState__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceLinkStateAccess().getLinkStateAssignment_4()); }
	(rule__AgentInstanceLinkState__LinkStateAssignment_4)
	{ after(grammarAccess.getAgentInstanceLinkStateAccess().getLinkStateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AgentInstance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstance__Group__0__Impl
	rule__AgentInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceAccess().getAgentInstanceKeyword_0()); }
	'AgentInstance'
	{ after(grammarAccess.getAgentInstanceAccess().getAgentInstanceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstance__Group__1__Impl
	rule__AgentInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceAccess().getNameAssignment_1()); }
	(rule__AgentInstance__NameAssignment_1)
	{ after(grammarAccess.getAgentInstanceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstance__Group__2__Impl
	rule__AgentInstance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceAccess().getAgentAssignment_2()); }
	(rule__AgentInstance__AgentAssignment_2)
	{ after(grammarAccess.getAgentInstanceAccess().getAgentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstance__Group__3__Impl
	rule__AgentInstance__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceAccess().getSiteStatesAssignment_3()); }
	(rule__AgentInstance__SiteStatesAssignment_3)
	{ after(grammarAccess.getAgentInstanceAccess().getSiteStatesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInstance__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInstanceAccess().getLinkStatesAssignment_4()); }
	(rule__AgentInstance__LinkStatesAssignment_4)
	{ after(grammarAccess.getAgentInstanceAccess().getLinkStatesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group__0__Impl
	rule__Float__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getFloatAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group__1__Impl
	rule__Float__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group__2__Impl
	rule__Float__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getFloatAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getFloatAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScientificFloat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScientificFloat__Group__0__Impl
	rule__ScientificFloat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScientificFloatAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getScientificFloatAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScientificFloat__Group__1__Impl
	rule__ScientificFloat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScientificFloatAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getScientificFloatAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScientificFloat__Group__2__Impl
	rule__ScientificFloat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScientificFloatAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getScientificFloatAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScientificFloat__Group__3__Impl
	rule__ScientificFloat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScientificFloatAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getScientificFloatAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScientificFloat__Group__4__Impl
	rule__ScientificFloat__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScientificFloatAccess().getEXPONENTTerminalRuleCall_4()); }
	RULE_EXPONENT
	{ after(grammarAccess.getScientificFloatAccess().getEXPONENTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScientificFloat__Group__5__Impl
	rule__ScientificFloat__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScientificFloatAccess().getAlternatives_5()); }
	(rule__ScientificFloat__Alternatives_5)
	{ after(grammarAccess.getScientificFloatAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScientificFloat__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScientificFloat__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScientificFloatAccess().getINTTerminalRuleCall_6()); }
	RULE_INT
	{ after(grammarAccess.getScientificFloatAccess().getINTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SignedInteger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedInteger__Group__0__Impl
	rule__SignedInteger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedIntegerAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getSignedIntegerAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedInteger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedIntegerAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getSignedIntegerAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__States__Group__0__Impl
	rule__States__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesAccess().getStatesAction_0()); }
	()
	{ after(grammarAccess.getStatesAccess().getStatesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__States__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesAccess().getGroup_1()); }
	(rule__States__Group_1__0)?
	{ after(grammarAccess.getStatesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__States__Group_1__0__Impl
	rule__States__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getStatesAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__States__Group_1__1__Impl
	rule__States__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesAccess().getStateAssignment_1_1()); }
	(rule__States__StateAssignment_1_1)
	{ after(grammarAccess.getStatesAccess().getStateAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__States__Group_1__2__Impl
	rule__States__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesAccess().getGroup_1_2()); }
	(rule__States__Group_1_2__0)*
	{ after(grammarAccess.getStatesAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__States__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getStatesAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__States__Group_1_2__0__Impl
	rule__States__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getStatesAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__States__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesAccess().getStateAssignment_1_2_1()); }
	(rule__States__StateAssignment_1_2_1)
	{ after(grammarAccess.getStatesAccess().getStateAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Site__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Site__Group__0__Impl
	rule__Site__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Site__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSiteAccess().getNameAssignment_0()); }
	(rule__Site__NameAssignment_0)
	{ after(grammarAccess.getSiteAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Site__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Site__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Site__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSiteAccess().getStatesAssignment_1()); }
	(rule__Site__StatesAssignment_1)
	{ after(grammarAccess.getSiteAccess().getStatesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sites__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sites__Group__0__Impl
	rule__Sites__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitesAccess().getSitesAction_0()); }
	()
	{ after(grammarAccess.getSitesAccess().getSitesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sites__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitesAccess().getGroup_1()); }
	(rule__Sites__Group_1__0)?
	{ after(grammarAccess.getSitesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sites__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sites__Group_1__0__Impl
	rule__Sites__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitesAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getSitesAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sites__Group_1__1__Impl
	rule__Sites__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitesAccess().getSitesAssignment_1_1()); }
	(rule__Sites__SitesAssignment_1_1)
	{ after(grammarAccess.getSitesAccess().getSitesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sites__Group_1__2__Impl
	rule__Sites__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitesAccess().getGroup_1_2()); }
	(rule__Sites__Group_1_2__0)*
	{ after(grammarAccess.getSitesAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sites__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitesAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getSitesAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sites__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sites__Group_1_2__0__Impl
	rule__Sites__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitesAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getSitesAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sites__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitesAccess().getSitesAssignment_1_2_1()); }
	(rule__Sites__SitesAssignment_1_2_1)
	{ after(grammarAccess.getSitesAccess().getSitesAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Agent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__0__Impl
	rule__Agent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getAgentKeyword_0()); }
	'agent'
	{ after(grammarAccess.getAgentAccess().getAgentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__1__Impl
	rule__Agent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getNameAssignment_1()); }
	(rule__Agent__NameAssignment_1)
	{ after(grammarAccess.getAgentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Agent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentAccess().getSitesAssignment_2()); }
	(rule__Agent__SitesAssignment_2)
	{ after(grammarAccess.getAgentAccess().getSitesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternVariable__Group__0__Impl
	rule__PatternVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternVariableAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getPatternVariableAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternVariable__Group__1__Impl
	rule__PatternVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternVariableAccess().getNameAssignment_1()); }
	(rule__PatternVariable__NameAssignment_1)
	{ after(grammarAccess.getPatternVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternVariable__Group__2__Impl
	rule__PatternVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternVariableAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getPatternVariableAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternVariableAccess().getPatternAssignment_3()); }
	(rule__PatternVariable__PatternAssignment_3)
	{ after(grammarAccess.getPatternVariableAccess().getPatternAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArithmeticVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticVariable__Group__0__Impl
	rule__ArithmeticVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticVariableAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getArithmeticVariableAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticVariable__Group__1__Impl
	rule__ArithmeticVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticVariableAccess().getNameAssignment_1()); }
	(rule__ArithmeticVariable__NameAssignment_1)
	{ after(grammarAccess.getArithmeticVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticVariable__Group__2__Impl
	rule__ArithmeticVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticVariableAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getArithmeticVariableAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArithmeticVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArithmeticVariableAccess().getValueAssignment_3()); }
	(rule__ArithmeticVariable__ValueAssignment_3)
	{ after(grammarAccess.getArithmeticVariableAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SemiLink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemiLink__Group__0__Impl
	rule__SemiLink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemiLink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemiLinkAccess().getSemiLinkAction_0()); }
	()
	{ after(grammarAccess.getSemiLinkAccess().getSemiLinkAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemiLink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemiLink__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemiLink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemiLinkAccess().getNameAssignment_1()); }
	(rule__SemiLink__NameAssignment_1)
	{ after(grammarAccess.getSemiLinkAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FreeLink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreeLink__Group__0__Impl
	rule__FreeLink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeLink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreeLinkAccess().getFreeLinkAction_0()); }
	()
	{ after(grammarAccess.getFreeLinkAccess().getFreeLinkAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeLink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreeLink__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeLink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreeLinkAccess().getNameAssignment_1()); }
	(rule__FreeLink__NameAssignment_1)
	{ after(grammarAccess.getFreeLinkAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhatEver__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhatEver__Group__0__Impl
	rule__WhatEver__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhatEver__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhatEverAccess().getWhatEverAction_0()); }
	()
	{ after(grammarAccess.getWhatEverAccess().getWhatEverAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhatEver__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhatEver__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhatEver__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhatEverAccess().getNameAssignment_1()); }
	(rule__WhatEver__NameAssignment_1)
	{ after(grammarAccess.getWhatEverAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedLink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexedLink__Group__0__Impl
	rule__IndexedLink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedLink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedLinkAccess().getIndexedLinkAction_0()); }
	()
	{ after(grammarAccess.getIndexedLinkAccess().getIndexedLinkAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedLink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexedLink__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedLink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexedLinkAccess().getStateAssignment_1()); }
	(rule__IndexedLink__StateAssignment_1)
	{ after(grammarAccess.getIndexedLinkAccess().getStateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExactLinkAgent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExactLinkAgent__Group__0__Impl
	rule__ExactLinkAgent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLinkAgent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExactLinkAgentAccess().getExactLinkAgentAction_0()); }
	()
	{ after(grammarAccess.getExactLinkAgentAccess().getExactLinkAgentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLinkAgent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExactLinkAgent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLinkAgent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExactLinkAgentAccess().getAgentAssignment_1()); }
	(rule__ExactLinkAgent__AgentAssignment_1)
	{ after(grammarAccess.getExactLinkAgentAccess().getAgentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExactLinkSite__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExactLinkSite__Group__0__Impl
	rule__ExactLinkSite__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLinkSite__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExactLinkSiteAccess().getExactLinkSiteAction_0()); }
	()
	{ after(grammarAccess.getExactLinkSiteAccess().getExactLinkSiteAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLinkSite__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExactLinkSite__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLinkSite__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExactLinkSiteAccess().getSiteAssignment_1()); }
	(rule__ExactLinkSite__SiteAssignment_1)
	{ after(grammarAccess.getExactLinkSiteAccess().getSiteAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExactLink__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExactLink__Group__0__Impl
	rule__ExactLink__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLink__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExactLinkAccess().getExactLinkAction_0()); }
	()
	{ after(grammarAccess.getExactLinkAccess().getExactLinkAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLink__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExactLink__Group__1__Impl
	rule__ExactLink__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLink__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExactLinkAccess().getLinkAgentAssignment_1()); }
	(rule__ExactLink__LinkAgentAssignment_1)
	{ after(grammarAccess.getExactLinkAccess().getLinkAgentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLink__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExactLink__Group__2__Impl
	rule__ExactLink__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLink__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExactLinkAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getExactLinkAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLink__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExactLink__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLink__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExactLinkAccess().getLinkSiteAssignment_3()); }
	(rule__ExactLink__LinkSiteAssignment_3)
	{ after(grammarAccess.getExactLinkAccess().getLinkSiteAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SiteState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SiteState__Group__0__Impl
	rule__SiteState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SiteState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSiteStateAccess().getSiteStateAction_0()); }
	()
	{ after(grammarAccess.getSiteStateAccess().getSiteStateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SiteState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SiteState__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SiteState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSiteStateAccess().getStateAssignment_1()); }
	(rule__SiteState__StateAssignment_1)
	{ after(grammarAccess.getSiteStateAccess().getStateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LinkState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkState__Group__0__Impl
	rule__LinkState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkStateAccess().getLinkStateAction_0()); }
	()
	{ after(grammarAccess.getLinkStateAccess().getLinkStateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LinkState__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkStateAccess().getLinkStateAssignment_1()); }
	(rule__LinkState__LinkStateAssignment_1)
	{ after(grammarAccess.getLinkStateAccess().getLinkStateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SitePattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePattern__Group__0__Impl
	rule__SitePattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternAccess().getSitePatternAction_0()); }
	()
	{ after(grammarAccess.getSitePatternAccess().getSitePatternAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePattern__Group__1__Impl
	rule__SitePattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternAccess().getSiteAssignment_1()); }
	(rule__SitePattern__SiteAssignment_1)
	{ after(grammarAccess.getSitePatternAccess().getSiteAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePattern__Group__2__Impl
	rule__SitePattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternAccess().getGroup_2()); }
	(rule__SitePattern__Group_2__0)?
	{ after(grammarAccess.getSitePatternAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePattern__Group__3__Impl
	rule__SitePattern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getSitePatternAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePattern__Group__4__Impl
	rule__SitePattern__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternAccess().getLinkStateAssignment_4()); }
	(rule__SitePattern__LinkStateAssignment_4)
	{ after(grammarAccess.getSitePatternAccess().getLinkStateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePattern__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getSitePatternAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SitePattern__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePattern__Group_2__0__Impl
	rule__SitePattern__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getSitePatternAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePattern__Group_2__1__Impl
	rule__SitePattern__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternAccess().getStateAssignment_2_1()); }
	(rule__SitePattern__StateAssignment_2_1)
	{ after(grammarAccess.getSitePatternAccess().getStateAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePattern__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternAccess().getRightCurlyBracketKeyword_2_2()); }
	'}'
	{ after(grammarAccess.getSitePatternAccess().getRightCurlyBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SitePatterns__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePatterns__Group__0__Impl
	rule__SitePatterns__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternsAccess().getSitePatternsAction_0()); }
	()
	{ after(grammarAccess.getSitePatternsAccess().getSitePatternsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePatterns__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternsAccess().getGroup_1()); }
	(rule__SitePatterns__Group_1__0)?
	{ after(grammarAccess.getSitePatternsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SitePatterns__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePatterns__Group_1__0__Impl
	rule__SitePatterns__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternsAccess().getSitePatternsAssignment_1_0()); }
	(rule__SitePatterns__SitePatternsAssignment_1_0)
	{ after(grammarAccess.getSitePatternsAccess().getSitePatternsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePatterns__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternsAccess().getGroup_1_1()); }
	(rule__SitePatterns__Group_1_1__0)*
	{ after(grammarAccess.getSitePatternsAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SitePatterns__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePatterns__Group_1_1__0__Impl
	rule__SitePatterns__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternsAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getSitePatternsAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitePatterns__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitePatternsAccess().getSitePatternsAssignment_1_1_1()); }
	(rule__SitePatterns__SitePatternsAssignment_1_1_1)
	{ after(grammarAccess.getSitePatternsAccess().getSitePatternsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AgentPattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentPattern__Group__0__Impl
	rule__AgentPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentPatternAccess().getAgentPatternAction_0()); }
	()
	{ after(grammarAccess.getAgentPatternAccess().getAgentPatternAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentPattern__Group__1__Impl
	rule__AgentPattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentPatternAccess().getAgentAssignment_1()); }
	(rule__AgentPattern__AgentAssignment_1)
	{ after(grammarAccess.getAgentPatternAccess().getAgentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentPattern__Group__2__Impl
	rule__AgentPattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentPatternAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAgentPatternAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentPattern__Group__3__Impl
	rule__AgentPattern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentPatternAccess().getSitePatternsAssignment_3()); }
	(rule__AgentPattern__SitePatternsAssignment_3)
	{ after(grammarAccess.getAgentPatternAccess().getSitePatternsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentPattern__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentPatternAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAgentPatternAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__0__Impl
	rule__Pattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getPatternAction_0()); }
	()
	{ after(grammarAccess.getPatternAccess().getPatternAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__1__Impl
	rule__Pattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__2__Impl
	rule__Pattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getGroup_2()); }
	(rule__Pattern__Group_2__0)?
	{ after(grammarAccess.getPatternAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_2__0__Impl
	rule__Pattern__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getAgentPatternsAssignment_2_0()); }
	(rule__Pattern__AgentPatternsAssignment_2_0)
	{ after(grammarAccess.getPatternAccess().getAgentPatternsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getGroup_2_1()); }
	(rule__Pattern__Group_2_1__0)*
	{ after(grammarAccess.getPatternAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_2_1__0__Impl
	rule__Pattern__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getPatternAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pattern__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternAccess().getAgentPatternsAssignment_2_1_1()); }
	(rule__Pattern__AgentPatternsAssignment_2_1_1)
	{ after(grammarAccess.getPatternAccess().getAgentPatternsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Observation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__0__Impl
	rule__Observation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getObsKeyword_0()); }
	'obs'
	{ after(grammarAccess.getObservationAccess().getObsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__1__Impl
	rule__Observation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getNameAssignment_1()); }
	(rule__Observation__NameAssignment_1)
	{ after(grammarAccess.getObservationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservationAccess().getObservationPatternAssignment_2()); }
	(rule__Observation__ObservationPatternAssignment_2)
	{ after(grammarAccess.getObservationAccess().getObservationPatternAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initial__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__0__Impl
	rule__Initial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getInitKeyword_0()); }
	'init'
	{ after(grammarAccess.getInitialAccess().getInitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__1__Impl
	rule__Initial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getNameAssignment_1()); }
	(rule__Initial__NameAssignment_1)
	{ after(grammarAccess.getInitialAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__2__Impl
	rule__Initial__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getCountAssignment_2()); }
	(rule__Initial__CountAssignment_2)
	{ after(grammarAccess.getInitialAccess().getCountAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getInitialPatternAssignment_3()); }
	(rule__Initial__InitialPatternAssignment_3)
	{ after(grammarAccess.getInitialAccess().getInitialPatternAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleVariables__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleVariables__Group__0__Impl
	rule__RuleVariables__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleVariables__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleVariablesAccess().getVariablesAssignment_0()); }
	(rule__RuleVariables__VariablesAssignment_0)
	{ after(grammarAccess.getRuleVariablesAccess().getVariablesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleVariables__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleVariables__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleVariables__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleVariablesAccess().getGroup_1()); }
	(rule__RuleVariables__Group_1__0)*
	{ after(grammarAccess.getRuleVariablesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleVariables__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleVariables__Group_1__0__Impl
	rule__RuleVariables__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleVariables__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleVariablesAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getRuleVariablesAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleVariables__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleVariables__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleVariables__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleVariablesAccess().getVariablesAssignment_1_1()); }
	(rule__RuleVariables__VariablesAssignment_1_1)
	{ after(grammarAccess.getRuleVariablesAccess().getVariablesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnidirectionalRule__Group__0__Impl
	rule__UnidirectionalRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnidirectionalRuleAccess().getLhsAssignment_0()); }
	(rule__UnidirectionalRule__LhsAssignment_0)
	{ after(grammarAccess.getUnidirectionalRuleAccess().getLhsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnidirectionalRule__Group__1__Impl
	rule__UnidirectionalRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnidirectionalRuleAccess().getOperatorAssignment_1()); }
	(rule__UnidirectionalRule__OperatorAssignment_1)
	{ after(grammarAccess.getUnidirectionalRuleAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnidirectionalRule__Group__2__Impl
	rule__UnidirectionalRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnidirectionalRuleAccess().getRhsAssignment_2()); }
	(rule__UnidirectionalRule__RhsAssignment_2)
	{ after(grammarAccess.getUnidirectionalRuleAccess().getRhsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnidirectionalRule__Group__3__Impl
	rule__UnidirectionalRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnidirectionalRuleAccess().getATTerminalRuleCall_3()); }
	RULE_AT
	{ after(grammarAccess.getUnidirectionalRuleAccess().getATTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnidirectionalRule__Group__4__Impl
	rule__UnidirectionalRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnidirectionalRuleAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getUnidirectionalRuleAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnidirectionalRule__Group__5__Impl
	rule__UnidirectionalRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnidirectionalRuleAccess().getVariablesAssignment_5()); }
	(rule__UnidirectionalRule__VariablesAssignment_5)
	{ after(grammarAccess.getUnidirectionalRuleAccess().getVariablesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnidirectionalRule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnidirectionalRuleAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getUnidirectionalRuleAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BidirectionalRule__Group__0__Impl
	rule__BidirectionalRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBidirectionalRuleAccess().getLhsAssignment_0()); }
	(rule__BidirectionalRule__LhsAssignment_0)
	{ after(grammarAccess.getBidirectionalRuleAccess().getLhsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BidirectionalRule__Group__1__Impl
	rule__BidirectionalRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBidirectionalRuleAccess().getOperatorAssignment_1()); }
	(rule__BidirectionalRule__OperatorAssignment_1)
	{ after(grammarAccess.getBidirectionalRuleAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BidirectionalRule__Group__2__Impl
	rule__BidirectionalRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBidirectionalRuleAccess().getRhsAssignment_2()); }
	(rule__BidirectionalRule__RhsAssignment_2)
	{ after(grammarAccess.getBidirectionalRuleAccess().getRhsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BidirectionalRule__Group__3__Impl
	rule__BidirectionalRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBidirectionalRuleAccess().getATTerminalRuleCall_3()); }
	RULE_AT
	{ after(grammarAccess.getBidirectionalRuleAccess().getATTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BidirectionalRule__Group__4__Impl
	rule__BidirectionalRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBidirectionalRuleAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getBidirectionalRuleAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BidirectionalRule__Group__5__Impl
	rule__BidirectionalRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBidirectionalRuleAccess().getVariablesAssignment_5()); }
	(rule__BidirectionalRule__VariablesAssignment_5)
	{ after(grammarAccess.getBidirectionalRuleAccess().getVariablesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BidirectionalRule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBidirectionalRuleAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getBidirectionalRuleAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
	(rule__Rule__NameAssignment_1)
	{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleAssignment_2()); }
	(rule__Rule__RuleAssignment_2)
	{ after(grammarAccess.getRuleAccess().getRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReactionRuleModel__ModelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionRuleModelAccess().getModelModelParserRuleCall_0_0()); }
		ruleModel
		{ after(grammarAccess.getReactionRuleModelAccess().getModelModelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionRuleModel__ReactionContainerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionRuleModelAccess().getReactionContainerReactionContainerParserRuleCall_1_0()); }
		ruleReactionContainer
		{ after(grammarAccess.getReactionRuleModelAccess().getReactionContainerReactionContainerParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionRuleModel__ReactionPropertiesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionRuleModelAccess().getReactionPropertiesReactionPropertyParserRuleCall_2_0()); }
		ruleReactionProperty
		{ after(grammarAccess.getReactionRuleModelAccess().getReactionPropertiesReactionPropertyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelUri__UriAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelUriAccess().getUriSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelUriAccess().getUriSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelPath__PathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelPathAccess().getPathSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelPathAccess().getPathSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__LocationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getLocationModelLocationParserRuleCall_2_0()); }
		ruleModelLocation
		{ after(grammarAccess.getModelAccess().getLocationModelLocationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReactionContainer__AgentInstancesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionContainerAccess().getAgentInstancesAgentInstanceParserRuleCall_1_0()); }
		ruleAgentInstance
		{ after(grammarAccess.getReactionContainerAccess().getAgentInstancesAgentInstanceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceSiteState__SiteAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceSiteStateAccess().getSiteSiteCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAgentInstanceSiteStateAccess().getSiteSiteIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAgentInstanceSiteStateAccess().getSiteSiteIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAgentInstanceSiteStateAccess().getSiteSiteCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceSiteState__SiteStateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceSiteStateAccess().getSiteStateSiteStateParserRuleCall_1_0()); }
		ruleSiteState
		{ after(grammarAccess.getAgentInstanceSiteStateAccess().getSiteStateSiteStateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__SiteAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceLinkStateAccess().getSiteSiteCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAgentInstanceLinkStateAccess().getSiteSiteIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAgentInstanceLinkStateAccess().getSiteSiteIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAgentInstanceLinkStateAccess().getSiteSiteCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__AttachedSiteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedSiteSiteCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedSiteSiteIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedSiteSiteIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedSiteSiteCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__AttachedAgentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentAgentCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentAgentIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentAgentIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentAgentCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__AttachedAgentInstanceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentInstanceAgentInstanceCrossReference_3_0()); }
		(
			{ before(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentInstanceAgentInstanceIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentInstanceAgentInstanceIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getAgentInstanceLinkStateAccess().getAttachedAgentInstanceAgentInstanceCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstanceLinkState__LinkStateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceLinkStateAccess().getLinkStateLinkStateParserRuleCall_4_0()); }
		ruleLinkState
		{ after(grammarAccess.getAgentInstanceLinkStateAccess().getLinkStateLinkStateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAgentInstanceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__AgentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceAccess().getAgentAgentCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAgentInstanceAccess().getAgentAgentIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAgentInstanceAccess().getAgentAgentIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAgentInstanceAccess().getAgentAgentCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__SiteStatesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceAccess().getSiteStatesAgentInstanceSiteStateParserRuleCall_3_0()); }
		ruleAgentInstanceSiteState
		{ after(grammarAccess.getAgentInstanceAccess().getSiteStatesAgentInstanceSiteStateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInstance__LinkStatesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInstanceAccess().getLinkStatesAgentInstanceLinkStateParserRuleCall_4_0()); }
		ruleAgentInstanceLinkState
		{ after(grammarAccess.getAgentInstanceAccess().getLinkStatesAgentInstanceLinkStateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticValueAccess().getValueArithmeticTypeParserRuleCall_0()); }
		ruleArithmeticType
		{ after(grammarAccess.getArithmeticValueAccess().getValueArithmeticTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__States__StateAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatesAccess().getStateStateParserRuleCall_1_1_0()); }
		ruleState
		{ after(grammarAccess.getStatesAccess().getStateStateParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__States__StateAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatesAccess().getStateStateParserRuleCall_1_2_1_0()); }
		ruleState
		{ after(grammarAccess.getStatesAccess().getStateStateParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Site__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSiteAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSiteAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Site__StatesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSiteAccess().getStatesStatesParserRuleCall_1_0()); }
		ruleStates
		{ after(grammarAccess.getSiteAccess().getStatesStatesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__SitesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitesAccess().getSitesSiteParserRuleCall_1_1_0()); }
		ruleSite
		{ after(grammarAccess.getSitesAccess().getSitesSiteParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sites__SitesAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitesAccess().getSitesSiteParserRuleCall_1_2_1_0()); }
		ruleSite
		{ after(grammarAccess.getSitesAccess().getSitesSiteParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Agent__SitesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentAccess().getSitesSitesParserRuleCall_2_0()); }
		ruleSites
		{ after(grammarAccess.getAgentAccess().getSitesSitesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPatternVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternVariable__PatternAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternVariableAccess().getPatternPatternParserRuleCall_3_0()); }
		rulePattern
		{ after(grammarAccess.getPatternVariableAccess().getPatternPatternParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getArithmeticVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArithmeticVariable__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArithmeticVariableAccess().getValueArithmeticValueParserRuleCall_3_0()); }
		ruleArithmeticValue
		{ after(grammarAccess.getArithmeticVariableAccess().getValueArithmeticValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemiLink__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemiLinkAccess().getNameSEMI_LINKTerminalRuleCall_1_0()); }
		RULE_SEMI_LINK
		{ after(grammarAccess.getSemiLinkAccess().getNameSEMI_LINKTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreeLink__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreeLinkAccess().getNameFREE_LINKTerminalRuleCall_1_0()); }
		RULE_FREE_LINK
		{ after(grammarAccess.getFreeLinkAccess().getNameFREE_LINKTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhatEver__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhatEverAccess().getNameWHATEVER_LINKTerminalRuleCall_1_0()); }
		RULE_WHATEVER_LINK
		{ after(grammarAccess.getWhatEverAccess().getNameWHATEVER_LINKTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedLink__StateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexedLinkAccess().getStateUnsignedIntegerParserRuleCall_1_0()); }
		ruleUnsignedInteger
		{ after(grammarAccess.getIndexedLinkAccess().getStateUnsignedIntegerParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLinkAgent__AgentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExactLinkAgentAccess().getAgentAgentCrossReference_1_0()); }
		(
			{ before(grammarAccess.getExactLinkAgentAccess().getAgentAgentIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExactLinkAgentAccess().getAgentAgentIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getExactLinkAgentAccess().getAgentAgentCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLinkSite__SiteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExactLinkSiteAccess().getSiteSiteCrossReference_1_0()); }
		(
			{ before(grammarAccess.getExactLinkSiteAccess().getSiteSiteIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExactLinkSiteAccess().getSiteSiteIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getExactLinkSiteAccess().getSiteSiteCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLink__LinkAgentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExactLinkAccess().getLinkAgentExactLinkAgentParserRuleCall_1_0()); }
		ruleExactLinkAgent
		{ after(grammarAccess.getExactLinkAccess().getLinkAgentExactLinkAgentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExactLink__LinkSiteAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExactLinkAccess().getLinkSiteExactLinkSiteParserRuleCall_3_0()); }
		ruleExactLinkSite
		{ after(grammarAccess.getExactLinkAccess().getLinkSiteExactLinkSiteParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SiteState__StateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSiteStateAccess().getStateStateCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSiteStateAccess().getStateStateIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSiteStateAccess().getStateStateIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSiteStateAccess().getStateStateCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkState__LinkStateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkStateAccess().getLinkStateAlternatives_1_0()); }
		(rule__LinkState__LinkStateAlternatives_1_0)
		{ after(grammarAccess.getLinkStateAccess().getLinkStateAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__SiteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitePatternAccess().getSiteSiteCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSitePatternAccess().getSiteSiteIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSitePatternAccess().getSiteSiteIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSitePatternAccess().getSiteSiteCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__StateAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitePatternAccess().getStateSiteStateParserRuleCall_2_1_0()); }
		ruleSiteState
		{ after(grammarAccess.getSitePatternAccess().getStateSiteStateParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePattern__LinkStateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitePatternAccess().getLinkStateLinkStateParserRuleCall_4_0()); }
		ruleLinkState
		{ after(grammarAccess.getSitePatternAccess().getLinkStateLinkStateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__SitePatternsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitePatternsAccess().getSitePatternsSitePatternParserRuleCall_1_0_0()); }
		ruleSitePattern
		{ after(grammarAccess.getSitePatternsAccess().getSitePatternsSitePatternParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitePatterns__SitePatternsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitePatternsAccess().getSitePatternsSitePatternParserRuleCall_1_1_1_0()); }
		ruleSitePattern
		{ after(grammarAccess.getSitePatternsAccess().getSitePatternsSitePatternParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__AgentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentPatternAccess().getAgentAgentCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAgentPatternAccess().getAgentAgentIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAgentPatternAccess().getAgentAgentIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAgentPatternAccess().getAgentAgentCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentPattern__SitePatternsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentPatternAccess().getSitePatternsSitePatternsParserRuleCall_3_0()); }
		ruleSitePatterns
		{ after(grammarAccess.getAgentPatternAccess().getSitePatternsSitePatternsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__AgentPatternsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getAgentPatternsAgentPatternParserRuleCall_2_0_0()); }
		ruleAgentPattern
		{ after(grammarAccess.getPatternAccess().getAgentPatternsAgentPatternParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__AgentPatternsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getAgentPatternsAgentPatternParserRuleCall_2_1_1_0()); }
		ruleAgentPattern
		{ after(grammarAccess.getPatternAccess().getAgentPatternsAgentPatternParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObservationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observation__ObservationPatternAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservationAccess().getObservationPatternPatternAssignmentParserRuleCall_2_0()); }
		rulePatternAssignment
		{ after(grammarAccess.getObservationAccess().getObservationPatternPatternAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFromLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericFromLiteralAccess().getValueArithmeticValueParserRuleCall_0()); }
		ruleArithmeticValue
		{ after(grammarAccess.getNumericFromLiteralAccess().getValueArithmeticValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFromVariable__ValueVarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericFromVariableAccess().getValueVarArithmeticVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getNumericFromVariableAccess().getValueVarArithmeticVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNumericFromVariableAccess().getValueVarArithmeticVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getNumericFromVariableAccess().getValueVarArithmeticVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInitialAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__CountAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getCountNumericAssignmentParserRuleCall_2_0()); }
		ruleNumericAssignment
		{ after(grammarAccess.getInitialAccess().getCountNumericAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__InitialPatternAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getInitialPatternPatternAssignmentParserRuleCall_3_0()); }
		rulePatternAssignment
		{ after(grammarAccess.getInitialAccess().getInitialPatternPatternAssignmentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignFromPattern__PatternAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignFromPatternAccess().getPatternPatternParserRuleCall_0()); }
		rulePattern
		{ after(grammarAccess.getAssignFromPatternAccess().getPatternPatternParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignFromVariable__PatternVarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignFromVariableAccess().getPatternVarPatternVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getAssignFromVariableAccess().getPatternVarPatternVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAssignFromVariableAccess().getPatternVarPatternVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getAssignFromVariableAccess().getPatternVarPatternVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleVariables__VariablesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleVariablesAccess().getVariablesNumericAssignmentParserRuleCall_0_0()); }
		ruleNumericAssignment
		{ after(grammarAccess.getRuleVariablesAccess().getVariablesNumericAssignmentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleVariables__VariablesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleVariablesAccess().getVariablesNumericAssignmentParserRuleCall_1_1_0()); }
		ruleNumericAssignment
		{ after(grammarAccess.getRuleVariablesAccess().getVariablesNumericAssignmentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__LhsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnidirectionalRuleAccess().getLhsPatternAssignmentParserRuleCall_0_0()); }
		rulePatternAssignment
		{ after(grammarAccess.getUnidirectionalRuleAccess().getLhsPatternAssignmentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnidirectionalRuleAccess().getOperatorUNITerminalRuleCall_1_0()); }
		RULE_UNI
		{ after(grammarAccess.getUnidirectionalRuleAccess().getOperatorUNITerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__RhsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnidirectionalRuleAccess().getRhsPatternAssignmentParserRuleCall_2_0()); }
		rulePatternAssignment
		{ after(grammarAccess.getUnidirectionalRuleAccess().getRhsPatternAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalRule__VariablesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnidirectionalRuleAccess().getVariablesRuleVariablesParserRuleCall_5_0()); }
		ruleRuleVariables
		{ after(grammarAccess.getUnidirectionalRuleAccess().getVariablesRuleVariablesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__LhsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBidirectionalRuleAccess().getLhsPatternAssignmentParserRuleCall_0_0()); }
		rulePatternAssignment
		{ after(grammarAccess.getBidirectionalRuleAccess().getLhsPatternAssignmentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBidirectionalRuleAccess().getOperatorBITerminalRuleCall_1_0()); }
		RULE_BI
		{ after(grammarAccess.getBidirectionalRuleAccess().getOperatorBITerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__RhsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBidirectionalRuleAccess().getRhsPatternAssignmentParserRuleCall_2_0()); }
		rulePatternAssignment
		{ after(grammarAccess.getBidirectionalRuleAccess().getRhsPatternAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalRule__VariablesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBidirectionalRuleAccess().getVariablesRuleVariablesParserRuleCall_5_0()); }
		ruleRuleVariables
		{ after(grammarAccess.getBidirectionalRuleAccess().getVariablesRuleVariablesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__RuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getRuleRuleBodyParserRuleCall_2_0()); }
		ruleRuleBody
		{ after(grammarAccess.getRuleAccess().getRuleRuleBodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_AT : '@';

RULE_BI : '<->';

RULE_UNI : '->';

RULE_SEMI_LINK : 'semi';

RULE_FREE_LINK : 'free';

RULE_WHATEVER_LINK : '?';

RULE_EXPONENT : 'E';

RULE_INT : '0'..'9' ('0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
