/* Agents & Sites & Site Modifications */
ModelID test1 

agent A(x , c )
agent B(x )
agent C(x1{u, p}, x2{u, p})
agent D(x1{e, q}, x2{y, t})

/* Variables */ 
var on_rate = 0.0001
var off_rate = 0.1
var mod_rate = 1.0
var mod_rate2 = -1.0
var mod_rate3 = -1.0E-1
//new variable features, i.e. signed integer, unsigned integer, scientific floats and patterns
var int = -1
var uint = 2
var pattern = { A(), B(x[free]) }
var pattern2 = { D(x1{e}) }
var sci = -2.45E-2
/* Observations */ 
obs Cuu { C(x1{u}, x2{u}) }
obs Cpu { C(x1{u}, x2{u}) }
obs Cpp { C(x1{p}, x2{p}) } 
obs AxB { A(x[B.x]) }
 
/* Initial conditions */
init init1 4 { A(),B() }
init init2 4 { C(x1{u}, x2{u}) }

/* Rules */
rule AtoB { A(x[free]), B(x[free]) } <-> { A(x[1]), B(x[1]) } @ [on_rate, off_rate]
			
rule ABtoC { A(x[semi], c[free]), C(x1{u}[free]) } -> 
			{ A(x[semi], c[2]), C(x1{u}[2]) } @ [on_rate]
			
rule modX1 { C(x1{u}[1]), A(c[1]) } -> { C(x1{p}[free]), A(c[free]) } @ [mod_rate]

rule AtoC { A(x[free],c[free]), C(x1{p}[free], x2{u}[free]) } -> 
			{ A(x[free],c[1]), C(x1{p}[free], x2{u}[1]) } @ [on_rate]
			
rule modX2 { A(x[free], c[1]), C(x1{p}[free], x2{u}[1]) } -> 
         { A(x[free], c[free]), C(x1{p}[free], x2{p}[free]) } @ [mod_rate]
         
// new rule features, i.e. assign patterns from pattern variables 
rule varTest pattern <-> { A(x[?]) } @ [on_rate, off_rate]