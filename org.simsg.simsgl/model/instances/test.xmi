<?xml version="1.0" encoding="UTF-8"?>
<simSGL:SimSGLModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:simSGL="http://www.simsg.org/simsgl/SimSGL" xsi:schemaLocation="http://www.simsg.org/simsgl/SimSGL java://org.simsg.simsgl.simSGL.SimSGLPackage">
  <model xmi:type="simSGL:Model" name="Test"/>
  <properties xmi:type="simSGL:Agent" name="a">
    <sites xmi:type="simSGL:Sites">
      <sites xmi:type="simSGL:SingleSite" name="x">
        <states xmi:type="simSGL:States"/>
      </sites>
    </sites>
    <states xmi:type="simSGL:States">
      <state xmi:type="simSGL:State" name="s"/>
    </states>
    <attributes xmi:type="simSGL:Attributes">
      <attributes xmi:type="simSGL:Attribute" name="t">
        <type xmi:type="simSGL:FloatAttribute"/>
      </attributes>
      <attributes xmi:type="simSGL:Attribute" name="q">
        <type xmi:type="simSGL:FloatAttribute"/>
      </attributes>
    </attributes>
  </properties>
  <properties xmi:type="simSGL:Agent" name="b">
    <sites xmi:type="simSGL:Sites"/>
    <states xmi:type="simSGL:States">
      <state xmi:type="simSGL:State" name="l"/>
    </states>
    <attributes xmi:type="simSGL:Attributes">
      <attributes xmi:type="simSGL:Attribute" name="w">
        <type xmi:type="simSGL:FloatAttribute"/>
      </attributes>
    </attributes>
  </properties>
  <properties xmi:type="simSGL:Agent" name="c">
    <sites xmi:type="simSGL:Sites">
      <sites xmi:type="simSGL:SingleSite" name="y">
        <states xmi:type="simSGL:States"/>
      </sites>
    </sites>
    <states xmi:type="simSGL:States"/>
    <attributes xmi:type="simSGL:Attributes">
      <attributes xmi:type="simSGL:Attribute" name="lp">
        <type xmi:type="simSGL:IntegerAttribute"/>
      </attributes>
    </attributes>
  </properties>
  <properties xmi:type="simSGL:Agent" name="d">
    <sites xmi:type="simSGL:Sites">
      <sites xmi:type="simSGL:SingleSite" name="w">
        <states xmi:type="simSGL:States"/>
      </sites>
    </sites>
    <states xmi:type="simSGL:States"/>
    <attributes xmi:type="simSGL:Attributes">
      <attributes xmi:type="simSGL:Attribute" name="lq">
        <type xmi:type="simSGL:FloatAttribute"/>
      </attributes>
    </attributes>
  </properties>
  <properties xmi:type="simSGL:Agent" name="e">
    <sites xmi:type="simSGL:Sites">
      <sites xmi:type="simSGL:SingleSite" name="q">
        <states xmi:type="simSGL:States"/>
      </sites>
    </sites>
    <states xmi:type="simSGL:States"/>
    <attributes xmi:type="simSGL:Attributes">
      <attributes xmi:type="simSGL:Attribute" name="lr">
        <type xmi:type="simSGL:IntegerAttribute"/>
      </attributes>
    </attributes>
  </properties>
  <properties xmi:type="simSGL:ArithmeticVariable" name="int">
    <value xmi:type="simSGL:ArithmeticValue" value="5"/>
  </properties>
  <properties xmi:type="simSGL:ArithmeticVariable" name="float">
    <value xmi:type="simSGL:ArithmeticValue" value="5.5"/>
  </properties>
  <properties xmi:type="simSGL:ArithmeticVariable" name="float2">
    <value xmi:type="simSGL:ArithmeticValue" value="-5.5"/>
  </properties>
  <properties xmi:type="simSGL:ArithmeticVariable" name="float3">
    <value xmi:type="simSGL:ArithmeticValue" value="5.2E+10"/>
  </properties>
  <properties xmi:type="simSGL:ArithmeticVariable" name="float4">
    <value xmi:type="simSGL:ArithmeticValue" value="-5.2E-10"/>
  </properties>
  <properties xmi:type="simSGL:Initial" name="i2">
    <count xmi:type="simSGL:NumericFromLiteral">
      <value xmi:type="simSGL:ArithmeticValue" value="4"/>
    </count>
    <initialPattern xmi:type="simSGL:AssignFromPattern">
      <pattern xmi:type="simSGL:Pattern">
        <agentPatterns xmi:type="simSGL:ValidAgentPattern" agent="//@properties.0">
          <variable xmi:type="simSGL:AgentPatternName" name="A"/>
          <sitePatterns xmi:type="simSGL:SitePatterns">
            <sitePatterns xmi:type="simSGL:SingleSitePattern" site="//@properties.0/@sites/@sites.0">
              <linkState xmi:type="simSGL:LinkState">
                <linkState xmi:type="simSGL:FreeLink" name="free"/>
              </linkState>
            </sitePatterns>
          </sitePatterns>
          <state xmi:type="simSGL:AgentState" state="//@properties.0/@states/@state.0"/>
        </agentPatterns>
        <constraints xmi:type="simSGL:Constraint">
          <operandL xmi:type="simSGL:OperationLeft">
            <left xmi:type="simSGL:AttributeOperandGeneric" agent="//@properties.10/@initialPattern/@pattern/@agentPatterns.0/@variable">
              <attribute xmi:type="simSGL:AttributeOperandAttribute" attribute="//@properties.0/@attributes/@attributes.0"/>
            </left>
          </operandL>
          <comparator xmi:type="simSGL:EqualComparator"/>
          <operandR xmi:type="simSGL:OperationLeft">
            <left xmi:type="simSGL:NumericFromLiteral">
              <value xmi:type="simSGL:ArithmeticValue" value="5"/>
            </left>
          </operandR>
        </constraints>
      </pattern>
    </initialPattern>
  </properties>
  <properties xmi:type="simSGL:Rule" name="r1">
    <rule xmi:type="simSGL:RuleBody" operator="->">
      <lhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:ValidAgentPattern" agent="//@properties.0">
            <variable xmi:type="simSGL:AgentPatternName" name="A"/>
            <sitePatterns xmi:type="simSGL:SitePatterns">
              <sitePatterns xmi:type="simSGL:SingleSitePattern" site="//@properties.0/@sites/@sites.0">
                <linkState xmi:type="simSGL:LinkState">
                  <linkState xmi:type="simSGL:FreeLink" name="free"/>
                </linkState>
              </sitePatterns>
            </sitePatterns>
            <state xmi:type="simSGL:AgentState" state="//@properties.0/@states/@state.0"/>
          </agentPatterns>
          <constraints xmi:type="simSGL:Constraint">
            <operandL xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:AttributeOperandGeneric" agent="//@properties.11/@rule/@lhs/@pattern/@agentPatterns.0/@variable">
                <attribute xmi:type="simSGL:AttributeOperandAttribute" attribute="//@properties.0/@attributes/@attributes.0"/>
              </left>
            </operandL>
            <comparator xmi:type="simSGL:EqualComparator"/>
            <operandR xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromLiteral">
                <value xmi:type="simSGL:ArithmeticValue" value="5"/>
              </left>
            </operandR>
          </constraints>
          <constraints xmi:type="simSGL:Constraint">
            <operandL xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:AttributeOperandGeneric" agent="//@properties.11/@rule/@lhs/@pattern/@agentPatterns.0/@variable">
                <attribute xmi:type="simSGL:AttributeOperandAttribute" attribute="//@properties.0/@attributes/@attributes.1"/>
              </left>
            </operandL>
            <comparator xmi:type="simSGL:EqualComparator"/>
            <operandR xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromLiteral">
                <value xmi:type="simSGL:ArithmeticValue" value="5"/>
              </left>
            </operandR>
          </constraints>
          <constraints xmi:type="simSGL:Constraint">
            <operandL xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromLiteral">
                <value xmi:type="simSGL:ArithmeticValue" value="5"/>
              </left>
            </operandL>
            <comparator xmi:type="simSGL:EqualComparator"/>
            <operandR xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromLiteral">
                <value xmi:type="simSGL:ArithmeticValue" value="5"/>
              </left>
              <right xmi:type="simSGL:OperationRight">
                <operator xmi:type="simSGL:PlusOperator"/>
                <right xmi:type="simSGL:OperationLeft">
                  <left xmi:type="simSGL:NumericFromLiteral">
                    <value xmi:type="simSGL:ArithmeticValue" value="5"/>
                  </left>
                </right>
              </right>
            </operandR>
          </constraints>
        </pattern>
      </lhs>
      <rhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:VoidAgentPattern" pattern="void"/>
        </pattern>
      </rhs>
      <variables xmi:type="simSGL:RuleVariables">
        <variables xmi:type="simSGL:NumericFromLiteral">
          <value xmi:type="simSGL:ArithmeticValue" value="1"/>
        </variables>
      </variables>
    </rule>
  </properties>
  <properties xmi:type="simSGL:Rule" name="r2">
    <rule xmi:type="simSGL:RuleBody" operator="->">
      <lhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:ValidAgentPattern" agent="//@properties.0">
            <sitePatterns xmi:type="simSGL:SitePatterns">
              <sitePatterns xmi:type="simSGL:SingleSitePattern" site="//@properties.0/@sites/@sites.0">
                <linkState xmi:type="simSGL:LinkState">
                  <linkState xmi:type="simSGL:FreeLink" name="free"/>
                </linkState>
              </sitePatterns>
            </sitePatterns>
            <state xmi:type="simSGL:AgentState" state="//@properties.0/@states/@state.0"/>
          </agentPatterns>
          <constraints xmi:type="simSGL:Constraint">
            <operandL xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromLiteral">
                <value xmi:type="simSGL:ArithmeticValue" value="5"/>
              </left>
            </operandL>
            <comparator xmi:type="simSGL:EqualComparator"/>
            <operandR xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromVariable" valueVar="//@properties.6"/>
              <right xmi:type="simSGL:OperationRight">
                <operator xmi:type="simSGL:PlusOperator"/>
                <right xmi:type="simSGL:OperationLeft">
                  <left xmi:type="simSGL:NumericFromLiteral">
                    <value xmi:type="simSGL:ArithmeticValue" value="5"/>
                  </left>
                  <right xmi:type="simSGL:OperationRight">
                    <operator xmi:type="simSGL:MinusOperator"/>
                    <right xmi:type="simSGL:OperationLeft">
                      <left xmi:type="simSGL:NumericFromLiteral">
                        <value xmi:type="simSGL:ArithmeticValue" value="5"/>
                      </left>
                    </right>
                  </right>
                </right>
              </right>
            </operandR>
          </constraints>
        </pattern>
      </lhs>
      <rhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:VoidAgentPattern" pattern="void"/>
        </pattern>
      </rhs>
      <variables xmi:type="simSGL:RuleVariables">
        <variables xmi:type="simSGL:NumericFromLiteral">
          <value xmi:type="simSGL:ArithmeticValue" value="1"/>
        </variables>
      </variables>
    </rule>
  </properties>
  <properties xmi:type="simSGL:Rule" name="r3">
    <rule xmi:type="simSGL:RuleBody" operator="->">
      <lhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:ValidAgentPattern" agent="//@properties.0">
            <sitePatterns xmi:type="simSGL:SitePatterns">
              <sitePatterns xmi:type="simSGL:SingleSitePattern" site="//@properties.0/@sites/@sites.0">
                <linkState xmi:type="simSGL:LinkState">
                  <linkState xmi:type="simSGL:FreeLink" name="free"/>
                </linkState>
              </sitePatterns>
            </sitePatterns>
            <state xmi:type="simSGL:AgentState" state="//@properties.0/@states/@state.0"/>
          </agentPatterns>
          <constraints xmi:type="simSGL:Constraint">
            <operandL xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromLiteral">
                <value xmi:type="simSGL:ArithmeticValue" value="5"/>
              </left>
            </operandL>
            <comparator xmi:type="simSGL:EqualComparator"/>
            <operandR xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:UnaryOperation">
                <operation xmi:type="simSGL:SquareRootOperation">
                  <operation xmi:type="simSGL:OperationLeft">
                    <left xmi:type="simSGL:NumericFromLiteral">
                      <value xmi:type="simSGL:ArithmeticValue" value="5"/>
                    </left>
                    <right xmi:type="simSGL:OperationRight">
                      <operator xmi:type="simSGL:PowOperator"/>
                      <right xmi:type="simSGL:OperationLeft">
                        <left xmi:type="simSGL:NumericFromLiteral">
                          <value xmi:type="simSGL:ArithmeticValue" value="2"/>
                        </left>
                        <right xmi:type="simSGL:OperationRight">
                          <operator xmi:type="simSGL:PlusOperator"/>
                          <right xmi:type="simSGL:OperationLeft">
                            <left xmi:type="simSGL:NumericFromLiteral">
                              <value xmi:type="simSGL:ArithmeticValue" value="6"/>
                            </left>
                            <right xmi:type="simSGL:OperationRight">
                              <operator xmi:type="simSGL:PowOperator"/>
                              <right xmi:type="simSGL:OperationLeft">
                                <left xmi:type="simSGL:NumericFromLiteral">
                                  <value xmi:type="simSGL:ArithmeticValue" value="2"/>
                                </left>
                                <right xmi:type="simSGL:OperationRight">
                                  <operator xmi:type="simSGL:PlusOperator"/>
                                  <right xmi:type="simSGL:OperationLeft">
                                    <left xmi:type="simSGL:NumericFromLiteral">
                                      <value xmi:type="simSGL:ArithmeticValue" value="3"/>
                                    </left>
                                    <right xmi:type="simSGL:OperationRight">
                                      <operator xmi:type="simSGL:PowOperator"/>
                                      <right xmi:type="simSGL:OperationLeft">
                                        <left xmi:type="simSGL:NumericFromLiteral">
                                          <value xmi:type="simSGL:ArithmeticValue" value="2"/>
                                        </left>
                                      </right>
                                    </right>
                                  </right>
                                </right>
                              </right>
                            </right>
                          </right>
                        </right>
                      </right>
                    </right>
                  </operation>
                </operation>
              </left>
            </operandR>
          </constraints>
          <constraints xmi:type="simSGL:Constraint">
            <operandL xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromLiteral">
                <value xmi:type="simSGL:ArithmeticValue" value="3"/>
              </left>
            </operandL>
            <comparator xmi:type="simSGL:EqualComparator"/>
            <operandR xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromLiteral">
                <value xmi:type="simSGL:ArithmeticValue" value="7"/>
              </left>
              <right xmi:type="simSGL:OperationRight">
                <operator xmi:type="simSGL:PlusOperator"/>
                <right xmi:type="simSGL:OperationLeft">
                  <left xmi:type="simSGL:UnaryOperation">
                    <operation xmi:type="simSGL:AbsoluteOperation">
                      <operation xmi:type="simSGL:OperationLeft">
                        <left xmi:type="simSGL:NumericFromLiteral">
                          <value xmi:type="simSGL:ArithmeticValue" value="3"/>
                        </left>
                        <right xmi:type="simSGL:OperationRight">
                          <operator xmi:type="simSGL:PlusOperator"/>
                          <right xmi:type="simSGL:OperationLeft">
                            <left xmi:type="simSGL:NumericFromLiteral">
                              <value xmi:type="simSGL:ArithmeticValue" value="1"/>
                            </left>
                          </right>
                        </right>
                      </operation>
                    </operation>
                  </left>
                  <right xmi:type="simSGL:OperationRight">
                    <operator xmi:type="simSGL:PlusOperator"/>
                    <right xmi:type="simSGL:OperationLeft">
                      <left xmi:type="simSGL:UnaryOperation">
                        <operation xmi:type="simSGL:AbsoluteOperation">
                          <operation xmi:type="simSGL:OperationLeft">
                            <left xmi:type="simSGL:NumericFromLiteral">
                              <value xmi:type="simSGL:ArithmeticValue" value="4"/>
                            </left>
                            <right xmi:type="simSGL:OperationRight">
                              <operator xmi:type="simSGL:MinusOperator"/>
                              <right xmi:type="simSGL:OperationLeft">
                                <left xmi:type="simSGL:UnaryOperation">
                                  <operation xmi:type="simSGL:SquareRootOperation">
                                    <operation xmi:type="simSGL:OperationLeft">
                                      <left xmi:type="simSGL:NumericFromLiteral">
                                        <value xmi:type="simSGL:ArithmeticValue" value="34"/>
                                      </left>
                                    </operation>
                                  </operation>
                                </left>
                              </right>
                            </right>
                          </operation>
                        </operation>
                      </left>
                    </right>
                  </right>
                </right>
              </right>
            </operandR>
          </constraints>
          <constraints xmi:type="simSGL:Constraint">
            <operandL xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromLiteral">
                <value xmi:type="simSGL:ArithmeticValue" value="5"/>
              </left>
            </operandL>
            <comparator xmi:type="simSGL:EqualComparator"/>
            <operandR xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:UnaryOperation">
                <operation xmi:type="simSGL:AbsoluteOperation">
                  <operation xmi:type="simSGL:OperationLeft">
                    <left xmi:type="simSGL:NumericFromLiteral">
                      <value xmi:type="simSGL:ArithmeticValue" value="45"/>
                    </left>
                  </operation>
                </operation>
              </left>
            </operandR>
          </constraints>
        </pattern>
      </lhs>
      <rhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:VoidAgentPattern" pattern="void"/>
        </pattern>
      </rhs>
      <variables xmi:type="simSGL:RuleVariables">
        <variables xmi:type="simSGL:NumericFromLiteral">
          <value xmi:type="simSGL:ArithmeticValue" value="1"/>
        </variables>
      </variables>
    </rule>
  </properties>
  <properties xmi:type="simSGL:Rule" name="r4">
    <rule xmi:type="simSGL:RuleBody" operator="->">
      <lhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:ValidAgentPattern" agent="//@properties.2">
            <variable xmi:type="simSGL:AgentPatternName" name="C"/>
            <sitePatterns xmi:type="simSGL:SitePatterns">
              <sitePatterns xmi:type="simSGL:SingleSitePattern" site="//@properties.2/@sites/@sites.0">
                <linkState xmi:type="simSGL:LinkState">
                  <linkState xmi:type="simSGL:FreeLink" name="free"/>
                </linkState>
              </sitePatterns>
            </sitePatterns>
          </agentPatterns>
          <constraints xmi:type="simSGL:Constraint">
            <operandL xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:AttributeOperandGeneric" agent="//@properties.14/@rule/@lhs/@pattern/@agentPatterns.0/@variable">
                <attribute xmi:type="simSGL:AttributeOperandAttribute" attribute="//@properties.2/@attributes/@attributes.0"/>
              </left>
            </operandL>
            <comparator xmi:type="simSGL:EqualComparator"/>
            <operandR xmi:type="simSGL:OperationLeft">
              <left xmi:type="simSGL:NumericFromLiteral">
                <value xmi:type="simSGL:ArithmeticValue" value="54"/>
              </left>
            </operandR>
          </constraints>
        </pattern>
      </lhs>
      <rhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:VoidAgentPattern" pattern="void"/>
        </pattern>
      </rhs>
      <variables xmi:type="simSGL:RuleVariables">
        <variables xmi:type="simSGL:NumericFromLiteral">
          <value xmi:type="simSGL:ArithmeticValue" value="1"/>
        </variables>
      </variables>
    </rule>
  </properties>
  <properties xmi:type="simSGL:Rule" name="r5">
    <rule xmi:type="simSGL:RuleBody" operator="->">
      <lhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:ValidAgentPattern" agent="//@properties.3">
            <variable xmi:type="simSGL:AgentPatternName" name="D"/>
            <sitePatterns xmi:type="simSGL:SitePatterns"/>
          </agentPatterns>
        </pattern>
      </lhs>
      <rhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:VoidAgentPattern" pattern="void"/>
        </pattern>
      </rhs>
      <variables xmi:type="simSGL:RuleVariables">
        <variables xmi:type="simSGL:NumericFromLiteral">
          <value xmi:type="simSGL:ArithmeticValue" value="1"/>
        </variables>
      </variables>
    </rule>
  </properties>
  <properties xmi:type="simSGL:Rule" name="r6">
    <rule xmi:type="simSGL:RuleBody" operator="->">
      <lhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:ValidAgentPattern" agent="//@properties.4">
            <variable xmi:type="simSGL:AgentPatternName" name="Q"/>
            <sitePatterns xmi:type="simSGL:SitePatterns"/>
          </agentPatterns>
        </pattern>
      </lhs>
      <rhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:VoidAgentPattern" pattern="void"/>
        </pattern>
      </rhs>
      <variables xmi:type="simSGL:RuleVariables">
        <variables xmi:type="simSGL:NumericFromLiteral">
          <value xmi:type="simSGL:ArithmeticValue" value="1"/>
        </variables>
      </variables>
    </rule>
  </properties>
  <properties xmi:type="simSGL:Rule" name="r7">
    <rule xmi:type="simSGL:RuleBody" operator="->">
      <lhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:ValidAgentPattern" agent="//@properties.1">
            <variable xmi:type="simSGL:AgentPatternName" name="F"/>
            <sitePatterns xmi:type="simSGL:SitePatterns"/>
          </agentPatterns>
        </pattern>
      </lhs>
      <rhs xmi:type="simSGL:AssignFromPattern">
        <pattern xmi:type="simSGL:Pattern">
          <agentPatterns xmi:type="simSGL:VoidAgentPattern" pattern="void"/>
        </pattern>
      </rhs>
      <variables xmi:type="simSGL:RuleVariables">
        <variables xmi:type="simSGL:NumericFromLiteral">
          <value xmi:type="simSGL:ArithmeticValue" value="1"/>
        </variables>
      </variables>
    </rule>
  </properties>
</simSGL:SimSGLModel>
