/*
 * generated by Xtext 2.16.0
 */
grammar InternalSimSGL;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.simsg.simsgl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.simsg.simsgl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.simsg.simsgl.services.SimSGLGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private SimSGLGrammarAccess grammarAccess;

    public InternalSimSGLParser(TokenStream input, SimSGLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SimSGLModel";
   	}

   	@Override
   	protected SimSGLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSimSGLModel
entryRuleSimSGLModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimSGLModelRule()); }
	iv_ruleSimSGLModel=ruleSimSGLModel
	{ $current=$iv_ruleSimSGLModel.current; }
	EOF;

// Rule SimSGLModel
ruleSimSGLModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSimSGLModelAccess().getModelModelParserRuleCall_0_0());
				}
				lv_model_0_0=ruleModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimSGLModelRule());
					}
					set(
						$current,
						"model",
						lv_model_0_0,
						"org.simsg.simsgl.SimSGL.Model");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimSGLModelAccess().getPropertiesSimSGLPropertyParserRuleCall_1_0());
				}
				lv_properties_1_0=ruleSimSGLProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimSGLModelRule());
					}
					add(
						$current,
						"properties",
						lv_properties_1_0,
						"org.simsg.simsgl.SimSGL.SimSGLProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ModelID'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelIDKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSimSGLProperty
entryRuleSimSGLProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimSGLPropertyRule()); }
	iv_ruleSimSGLProperty=ruleSimSGLProperty
	{ $current=$iv_ruleSimSGLProperty.current; }
	EOF;

// Rule SimSGLProperty
ruleSimSGLProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimSGLPropertyAccess().getAgentParserRuleCall_0());
		}
		this_Agent_0=ruleAgent
		{
			$current = $this_Agent_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimSGLPropertyAccess().getVariableParserRuleCall_1());
		}
		this_Variable_1=ruleVariable
		{
			$current = $this_Variable_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimSGLPropertyAccess().getObservationParserRuleCall_2());
		}
		this_Observation_2=ruleObservation
		{
			$current = $this_Observation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimSGLPropertyAccess().getInitialParserRuleCall_3());
		}
		this_Initial_3=ruleInitial
		{
			$current = $this_Initial_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimSGLPropertyAccess().getRuleParserRuleCall_4());
		}
		this_Rule_4=ruleRule
		{
			$current = $this_Rule_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSimSGLPropertyAccess().getTerminateParserRuleCall_5());
		}
		this_Terminate_5=ruleTerminate
		{
			$current = $this_Terminate_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFloat
entryRuleFloat returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getFloatRule()); }
	iv_ruleFloat=ruleFloat
	{ $current=$iv_ruleFloat.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Float
ruleFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			this_MINUS_0=RULE_MINUS
			{
				$current.merge(this_MINUS_0);
			}
			{
				newLeafNode(this_MINUS_0, grammarAccess.getFloatAccess().getMINUSTerminalRuleCall_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getFloatAccess().getINTTerminalRuleCall_1());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getFloatAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getFloatAccess().getINTTerminalRuleCall_3());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleScientificFloat
entryRuleScientificFloat returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getScientificFloatRule()); }
	iv_ruleScientificFloat=ruleScientificFloat
	{ $current=$iv_ruleScientificFloat.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule ScientificFloat
ruleScientificFloat returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		(
			this_MINUS_0=RULE_MINUS
			{
				$current.merge(this_MINUS_0);
			}
			{
				newLeafNode(this_MINUS_0, grammarAccess.getScientificFloatAccess().getMINUSTerminalRuleCall_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getScientificFloatAccess().getINTTerminalRuleCall_1());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getScientificFloatAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getScientificFloatAccess().getINTTerminalRuleCall_3());
		}
		this_EXPONENT_4=RULE_EXPONENT
		{
			$current.merge(this_EXPONENT_4);
		}
		{
			newLeafNode(this_EXPONENT_4, grammarAccess.getScientificFloatAccess().getEXPONENTTerminalRuleCall_4());
		}
		(
			this_MINUS_5=RULE_MINUS
			{
				$current.merge(this_MINUS_5);
			}
			{
				newLeafNode(this_MINUS_5, grammarAccess.getScientificFloatAccess().getMINUSTerminalRuleCall_5_0());
			}
			    |
			this_PLUS_6=RULE_PLUS
			{
				$current.merge(this_PLUS_6);
			}
			{
				newLeafNode(this_PLUS_6, grammarAccess.getScientificFloatAccess().getPLUSTerminalRuleCall_5_1());
			}
		)
		this_INT_7=RULE_INT
		{
			$current.merge(this_INT_7);
		}
		{
			newLeafNode(this_INT_7, grammarAccess.getScientificFloatAccess().getINTTerminalRuleCall_6());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleUnsignedInteger
entryRuleUnsignedInteger returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getUnsignedIntegerRule()); }
	iv_ruleUnsignedInteger=ruleUnsignedInteger
	{ $current=$iv_ruleUnsignedInteger.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule UnsignedInteger
ruleUnsignedInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getUnsignedIntegerAccess().getINTTerminalRuleCall());
	}
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSignedInteger
entryRuleSignedInteger returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getSignedIntegerRule()); }
	iv_ruleSignedInteger=ruleSignedInteger
	{ $current=$iv_ruleSignedInteger.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule SignedInteger
ruleSignedInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_MINUS_0=RULE_MINUS
		{
			$current.merge(this_MINUS_0);
		}
		{
			newLeafNode(this_MINUS_0, grammarAccess.getSignedIntegerAccess().getMINUSTerminalRuleCall_0());
		}
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getSignedIntegerAccess().getINTTerminalRuleCall_1());
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleArithmeticType
entryRuleArithmeticType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticTypeRule()); }
	iv_ruleArithmeticType=ruleArithmeticType
	{ $current=$iv_ruleArithmeticType.current.getText(); }
	EOF;

// Rule ArithmeticType
ruleArithmeticType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getArithmeticTypeAccess().getFloatParserRuleCall_0());
		}
		this_Float_0=ruleFloat
		{
			$current.merge(this_Float_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmeticTypeAccess().getUnsignedIntegerParserRuleCall_1());
		}
		this_UnsignedInteger_1=ruleUnsignedInteger
		{
			$current.merge(this_UnsignedInteger_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmeticTypeAccess().getSignedIntegerParserRuleCall_2());
		}
		this_SignedInteger_2=ruleSignedInteger
		{
			$current.merge(this_SignedInteger_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getArithmeticTypeAccess().getScientificFloatParserRuleCall_3());
		}
		this_ScientificFloat_3=ruleScientificFloat
		{
			$current.merge(this_ScientificFloat_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArithmeticValue
entryRuleArithmeticValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticValueRule()); }
	iv_ruleArithmeticValue=ruleArithmeticValue
	{ $current=$iv_ruleArithmeticValue.current; }
	EOF;

// Rule ArithmeticValue
ruleArithmeticValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getArithmeticValueAccess().getValueArithmeticTypeParserRuleCall_0());
			}
			lv_value_0_0=ruleArithmeticType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getArithmeticValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.simsg.simsgl.SimSGL.ArithmeticType");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStateRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleStates
entryRuleStates returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatesRule()); }
	iv_ruleStates=ruleStates
	{ $current=$iv_ruleStates.current; }
	EOF;

// Rule States
ruleStates returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatesAccess().getStatesAction_0(),
					$current);
			}
		)
		(
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getStatesAccess().getLeftCurlyBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatesAccess().getStateStateParserRuleCall_1_1_0());
					}
					lv_state_2_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatesRule());
						}
						add(
							$current,
							"state",
							lv_state_2_0,
							"org.simsg.simsgl.SimSGL.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getStatesAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStatesAccess().getStateStateParserRuleCall_1_2_1_0());
						}
						lv_state_4_0=ruleState
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStatesRule());
							}
							add(
								$current,
								"state",
								lv_state_4_0,
								"org.simsg.simsgl.SimSGL.State");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5='}'
			{
				newLeafNode(otherlv_5, grammarAccess.getStatesAccess().getRightCurlyBracketKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleSingleSite
entryRuleSingleSite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleSiteRule()); }
	iv_ruleSingleSite=ruleSingleSite
	{ $current=$iv_ruleSingleSite.current; }
	EOF;

// Rule SingleSite
ruleSingleSite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSingleSiteAccess().getSingleSiteAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSingleSiteAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleSiteRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleSiteAccess().getStatesStatesParserRuleCall_2_0());
				}
				lv_states_2_0=ruleStates
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleSiteRule());
					}
					set(
						$current,
						"states",
						lv_states_2_0,
						"org.simsg.simsgl.SimSGL.States");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMultiSite
entryRuleMultiSite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiSiteRule()); }
	iv_ruleMultiSite=ruleMultiSite
	{ $current=$iv_ruleMultiSite.current; }
	EOF;

// Rule MultiSite
ruleMultiSite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMultiSiteAccess().getMultiSiteAction_0(),
					$current);
			}
		)
		this_MULT_1=RULE_MULT
		{
			newLeafNode(this_MULT_1, grammarAccess.getMultiSiteAccess().getMULTTerminalRuleCall_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMultiSiteAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiSiteRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiSiteAccess().getStatesStatesParserRuleCall_3_0());
				}
				lv_states_3_0=ruleStates
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiSiteRule());
					}
					set(
						$current,
						"states",
						lv_states_3_0,
						"org.simsg.simsgl.SimSGL.States");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSite
entryRuleSite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSiteRule()); }
	iv_ruleSite=ruleSite
	{ $current=$iv_ruleSite.current; }
	EOF;

// Rule Site
ruleSite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSiteAccess().getSingleSiteParserRuleCall_0());
		}
		this_SingleSite_0=ruleSingleSite
		{
			$current = $this_SingleSite_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSiteAccess().getMultiSiteParserRuleCall_1());
		}
		this_MultiSite_1=ruleMultiSite
		{
			$current = $this_MultiSite_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSites
entryRuleSites returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSitesRule()); }
	iv_ruleSites=ruleSites
	{ $current=$iv_ruleSites.current; }
	EOF;

// Rule Sites
ruleSites returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSitesAccess().getSitesAction_0(),
					$current);
			}
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getSitesAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSitesAccess().getSitesSiteParserRuleCall_1_1_0());
					}
					lv_sites_2_0=ruleSite
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitesRule());
						}
						add(
							$current,
							"sites",
							lv_sites_2_0,
							"org.simsg.simsgl.SimSGL.Site");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getSitesAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSitesAccess().getSitesSiteParserRuleCall_1_2_1_0());
						}
						lv_sites_4_0=ruleSite
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSitesRule());
							}
							add(
								$current,
								"sites",
								lv_sites_4_0,
								"org.simsg.simsgl.SimSGL.Site");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getSitesAccess().getRightParenthesisKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleFloatAttribute
entryRuleFloatAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatAttributeRule()); }
	iv_ruleFloatAttribute=ruleFloatAttribute
	{ $current=$iv_ruleFloatAttribute.current; }
	EOF;

// Rule FloatAttribute
ruleFloatAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFloatAttributeAccess().getFloatAttributeAction_0(),
					$current);
			}
		)
		this_FLOAT_ATTRIBUTE_1=RULE_FLOAT_ATTRIBUTE
		{
			newLeafNode(this_FLOAT_ATTRIBUTE_1, grammarAccess.getFloatAttributeAccess().getFLOAT_ATTRIBUTETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleIntegerAttribute
entryRuleIntegerAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerAttributeRule()); }
	iv_ruleIntegerAttribute=ruleIntegerAttribute
	{ $current=$iv_ruleIntegerAttribute.current; }
	EOF;

// Rule IntegerAttribute
ruleIntegerAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntegerAttributeAccess().getIntegerAttributeAction_0(),
					$current);
			}
		)
		this_INT_ATTRIBUTE_1=RULE_INT_ATTRIBUTE
		{
			newLeafNode(this_INT_ATTRIBUTE_1, grammarAccess.getIntegerAttributeAccess().getINT_ATTRIBUTETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleNumberAttribute
entryRuleNumberAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberAttributeRule()); }
	iv_ruleNumberAttribute=ruleNumberAttribute
	{ $current=$iv_ruleNumberAttribute.current; }
	EOF;

// Rule NumberAttribute
ruleNumberAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNumberAttributeAccess().getFloatAttributeParserRuleCall_0());
		}
		this_FloatAttribute_0=ruleFloatAttribute
		{
			$current = $this_FloatAttribute_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNumberAttributeAccess().getIntegerAttributeParserRuleCall_1());
		}
		this_IntegerAttribute_1=ruleIntegerAttribute
		{
			$current = $this_IntegerAttribute_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeTypeRule()); }
	iv_ruleAttributeType=ruleAttributeType
	{ $current=$iv_ruleAttributeType.current; }
	EOF;

// Rule AttributeType
ruleAttributeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getAttributeTypeAccess().getNumberAttributeParserRuleCall());
	}
	this_NumberAttribute_0=ruleNumberAttribute
	{
		$current = $this_NumberAttribute_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeAttributeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleAttributeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.simsg.simsgl.SimSGL.AttributeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAttributes
entryRuleAttributes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributesRule()); }
	iv_ruleAttributes=ruleAttributes
	{ $current=$iv_ruleAttributes.current; }
	EOF;

// Rule Attributes
ruleAttributes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributesAccess().getAttributesAction_0(),
					$current);
			}
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributesAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributesAccess().getAttributesAttributeParserRuleCall_1_1_0());
					}
					lv_attributes_2_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributesRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_2_0,
							"org.simsg.simsgl.SimSGL.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getAttributesAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAttributesAccess().getAttributesAttributeParserRuleCall_1_2_1_0());
						}
						lv_attributes_4_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAttributesRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_4_0,
								"org.simsg.simsgl.SimSGL.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getAttributesAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleAgent
entryRuleAgent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAgentRule()); }
	iv_ruleAgent=ruleAgent
	{ $current=$iv_ruleAgent.current; }
	EOF;

// Rule Agent
ruleAgent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='agent'
		{
			newLeafNode(otherlv_0, grammarAccess.getAgentAccess().getAgentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAgentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAgentAccess().getSitesSitesParserRuleCall_2_0());
				}
				lv_sites_2_0=ruleSites
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAgentRule());
					}
					set(
						$current,
						"sites",
						lv_sites_2_0,
						"org.simsg.simsgl.SimSGL.Sites");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAgentAccess().getStatesStatesParserRuleCall_3_0());
				}
				lv_states_3_0=ruleStates
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAgentRule());
					}
					set(
						$current,
						"states",
						lv_states_3_0,
						"org.simsg.simsgl.SimSGL.States");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAgentAccess().getAttributesAttributesParserRuleCall_4_0());
				}
				lv_attributes_4_0=ruleAttributes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAgentRule());
					}
					set(
						$current,
						"attributes",
						lv_attributes_4_0,
						"org.simsg.simsgl.SimSGL.Attributes");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePatternVariable
entryRulePatternVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternVariableRule()); }
	iv_rulePatternVariable=rulePatternVariable
	{ $current=$iv_rulePatternVariable.current; }
	EOF;

// Rule PatternVariable
rulePatternVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getPatternVariableAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPatternVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatternVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getPatternVariableAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPatternVariableAccess().getPatternPatternParserRuleCall_3_0());
				}
				lv_pattern_3_0=rulePattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatternVariableRule());
					}
					set(
						$current,
						"pattern",
						lv_pattern_3_0,
						"org.simsg.simsgl.SimSGL.Pattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArithmeticVariable
entryRuleArithmeticVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticVariableRule()); }
	iv_ruleArithmeticVariable=ruleArithmeticVariable
	{ $current=$iv_ruleArithmeticVariable.current; }
	EOF;

// Rule ArithmeticVariable
ruleArithmeticVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getArithmeticVariableAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getArithmeticVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArithmeticVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getArithmeticVariableAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArithmeticVariableAccess().getValueArithmeticValueParserRuleCall_3_0());
				}
				lv_value_3_0=ruleArithmeticValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArithmeticVariableRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.simsg.simsgl.SimSGL.ArithmeticValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableAccess().getPatternVariableParserRuleCall_0());
		}
		this_PatternVariable_0=rulePatternVariable
		{
			$current = $this_PatternVariable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableAccess().getArithmeticVariableParserRuleCall_1());
		}
		this_ArithmeticVariable_1=ruleArithmeticVariable
		{
			$current = $this_ArithmeticVariable_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBoundAnyLink
entryRuleBoundAnyLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoundAnyLinkRule()); }
	iv_ruleBoundAnyLink=ruleBoundAnyLink
	{ $current=$iv_ruleBoundAnyLink.current; }
	EOF;

// Rule BoundAnyLink
ruleBoundAnyLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoundAnyLinkAccess().getBoundAnyLinkAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_BOUND_LINK
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBoundAnyLinkAccess().getNameBOUND_LINKTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoundAnyLinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.simsg.simsgl.SimSGL.BOUND_LINK");
				}
			)
		)
	)
;

// Entry rule entryRuleFreeLink
entryRuleFreeLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFreeLinkRule()); }
	iv_ruleFreeLink=ruleFreeLink
	{ $current=$iv_ruleFreeLink.current; }
	EOF;

// Rule FreeLink
ruleFreeLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFreeLinkAccess().getFreeLinkAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_FREE_LINK
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFreeLinkAccess().getNameFREE_LINKTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFreeLinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.simsg.simsgl.SimSGL.FREE_LINK");
				}
			)
		)
	)
;

// Entry rule entryRuleIndexedFreeLink
entryRuleIndexedFreeLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexedFreeLinkRule()); }
	iv_ruleIndexedFreeLink=ruleIndexedFreeLink
	{ $current=$iv_ruleIndexedFreeLink.current; }
	EOF;

// Rule IndexedFreeLink
ruleIndexedFreeLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getIndexedFreeLinkAccess().getIndexedFreeLinkAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_FREE_LINK
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIndexedFreeLinkAccess().getNameFREE_LINKTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndexedFreeLinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.simsg.simsgl.SimSGL.FREE_LINK");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getIndexedFreeLinkAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexedFreeLinkAccess().getStateUnsignedIntegerParserRuleCall_3_0());
				}
				lv_state_3_0=ruleUnsignedInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexedFreeLinkRule());
					}
					set(
						$current,
						"state",
						lv_state_3_0,
						"org.simsg.simsgl.SimSGL.UnsignedInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getIndexedFreeLinkAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleTypedFreeLink
entryRuleTypedFreeLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedFreeLinkRule()); }
	iv_ruleTypedFreeLink=ruleTypedFreeLink
	{ $current=$iv_ruleTypedFreeLink.current; }
	EOF;

// Rule TypedFreeLink
ruleTypedFreeLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTypedFreeLinkAccess().getTypedFreeLinkAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_FREE_LINK
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypedFreeLinkAccess().getNameFREE_LINKTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypedFreeLinkRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.simsg.simsgl.SimSGL.FREE_LINK");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getTypedFreeLinkAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypedFreeLinkRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getTypedFreeLinkAccess().getStateAgentCrossReference_3_0());
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypedFreeLinkAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleWhatEver
entryRuleWhatEver returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhatEverRule()); }
	iv_ruleWhatEver=ruleWhatEver
	{ $current=$iv_ruleWhatEver.current; }
	EOF;

// Rule WhatEver
ruleWhatEver returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getWhatEverAccess().getWhatEverAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_WHATEVER_LINK
				{
					newLeafNode(lv_name_1_0, grammarAccess.getWhatEverAccess().getNameWHATEVER_LINKTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWhatEverRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.simsg.simsgl.SimSGL.WHATEVER_LINK");
				}
			)
		)
	)
;

// Entry rule entryRuleBoundLink
entryRuleBoundLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoundLinkRule()); }
	iv_ruleBoundLink=ruleBoundLink
	{ $current=$iv_ruleBoundLink.current; }
	EOF;

// Rule BoundLink
ruleBoundLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoundLinkAccess().getBoundLinkAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBoundLinkAccess().getStateUnsignedIntegerParserRuleCall_1_0());
				}
				lv_state_1_0=ruleUnsignedInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoundLinkRule());
					}
					set(
						$current,
						"state",
						lv_state_1_0,
						"org.simsg.simsgl.SimSGL.UnsignedInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMultiLink
entryRuleMultiLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiLinkRule()); }
	iv_ruleMultiLink=ruleMultiLink
	{ $current=$iv_ruleMultiLink.current; }
	EOF;

// Rule MultiLink
ruleMultiLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMultiLinkAccess().getMultiLinkAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMultiLinkAccess().getStatesBoundLinkParserRuleCall_1_0_0_0());
						}
						lv_states_1_1=ruleBoundLink
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultiLinkRule());
							}
							add(
								$current,
								"states",
								lv_states_1_1,
								"org.simsg.simsgl.SimSGL.BoundLink");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getMultiLinkAccess().getStatesIndexedFreeLinkParserRuleCall_1_0_0_1());
						}
						lv_states_1_2=ruleIndexedFreeLink
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultiLinkRule());
							}
							add(
								$current,
								"states",
								lv_states_1_2,
								"org.simsg.simsgl.SimSGL.IndexedFreeLink");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getMultiLinkAccess().getStatesTypedFreeLinkParserRuleCall_1_0_0_2());
						}
						lv_states_1_3=ruleTypedFreeLink
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultiLinkRule());
							}
							add(
								$current,
								"states",
								lv_states_1_3,
								"org.simsg.simsgl.SimSGL.TypedFreeLink");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getMultiLinkAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getMultiLinkAccess().getStatesBoundLinkParserRuleCall_1_1_1_0_0());
							}
							lv_states_3_1=ruleBoundLink
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMultiLinkRule());
								}
								add(
									$current,
									"states",
									lv_states_3_1,
									"org.simsg.simsgl.SimSGL.BoundLink");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getMultiLinkAccess().getStatesIndexedFreeLinkParserRuleCall_1_1_1_0_1());
							}
							lv_states_3_2=ruleIndexedFreeLink
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMultiLinkRule());
								}
								add(
									$current,
									"states",
									lv_states_3_2,
									"org.simsg.simsgl.SimSGL.IndexedFreeLink");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getMultiLinkAccess().getStatesTypedFreeLinkParserRuleCall_1_1_1_0_2());
							}
							lv_states_3_3=ruleTypedFreeLink
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMultiLinkRule());
								}
								add(
									$current,
									"states",
									lv_states_3_3,
									"org.simsg.simsgl.SimSGL.TypedFreeLink");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)+
		)?
	)
;

// Entry rule entryRuleBoundAnyOfTypeLinkAgent
entryRuleBoundAnyOfTypeLinkAgent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoundAnyOfTypeLinkAgentRule()); }
	iv_ruleBoundAnyOfTypeLinkAgent=ruleBoundAnyOfTypeLinkAgent
	{ $current=$iv_ruleBoundAnyOfTypeLinkAgent.current; }
	EOF;

// Rule BoundAnyOfTypeLinkAgent
ruleBoundAnyOfTypeLinkAgent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoundAnyOfTypeLinkAgentAccess().getBoundAnyOfTypeLinkAgentAction_0(),
					$current);
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoundAnyOfTypeLinkAgentRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getBoundAnyOfTypeLinkAgentAccess().getAgentAgentCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleBoundAnyOfTypeLinkSite
entryRuleBoundAnyOfTypeLinkSite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoundAnyOfTypeLinkSiteRule()); }
	iv_ruleBoundAnyOfTypeLinkSite=ruleBoundAnyOfTypeLinkSite
	{ $current=$iv_ruleBoundAnyOfTypeLinkSite.current; }
	EOF;

// Rule BoundAnyOfTypeLinkSite
ruleBoundAnyOfTypeLinkSite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoundAnyOfTypeLinkSiteAccess().getBoundAnyOfTypeLinkSiteAction_0(),
					$current);
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoundAnyOfTypeLinkSiteRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getBoundAnyOfTypeLinkSiteAccess().getSiteSiteCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleBoundAnyOfTypeLink
entryRuleBoundAnyOfTypeLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoundAnyOfTypeLinkRule()); }
	iv_ruleBoundAnyOfTypeLink=ruleBoundAnyOfTypeLink
	{ $current=$iv_ruleBoundAnyOfTypeLink.current; }
	EOF;

// Rule BoundAnyOfTypeLink
ruleBoundAnyOfTypeLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoundAnyOfTypeLinkAccess().getBoundAnyOfTypeLinkAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBoundAnyOfTypeLinkAccess().getLinkAgentBoundAnyOfTypeLinkAgentParserRuleCall_1_0());
				}
				lv_linkAgent_1_0=ruleBoundAnyOfTypeLinkAgent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoundAnyOfTypeLinkRule());
					}
					set(
						$current,
						"linkAgent",
						lv_linkAgent_1_0,
						"org.simsg.simsgl.SimSGL.BoundAnyOfTypeLinkAgent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getBoundAnyOfTypeLinkAccess().getFullStopKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBoundAnyOfTypeLinkAccess().getLinkSiteBoundAnyOfTypeLinkSiteParserRuleCall_3_0());
				}
				lv_linkSite_3_0=ruleBoundAnyOfTypeLinkSite
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoundAnyOfTypeLinkRule());
					}
					set(
						$current,
						"linkSite",
						lv_linkSite_3_0,
						"org.simsg.simsgl.SimSGL.BoundAnyOfTypeLinkSite");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSiteState
entryRuleSiteState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSiteStateRule()); }
	iv_ruleSiteState=ruleSiteState
	{ $current=$iv_ruleSiteState.current; }
	EOF;

// Rule SiteState
ruleSiteState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSiteStateAccess().getSiteStateAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSiteStateAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSiteStateRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getSiteStateAccess().getStateStateCrossReference_2_0());
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getSiteStateAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleAgentState
entryRuleAgentState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAgentStateRule()); }
	iv_ruleAgentState=ruleAgentState
	{ $current=$iv_ruleAgentState.current; }
	EOF;

// Rule AgentState
ruleAgentState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getAgentStateAccess().getAgentStateAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAgentStateAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAgentStateRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getAgentStateAccess().getStateStateCrossReference_2_0());
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getAgentStateAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleLinkState
entryRuleLinkState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkStateRule()); }
	iv_ruleLinkState=ruleLinkState
	{ $current=$iv_ruleLinkState.current; }
	EOF;

// Rule LinkState
ruleLinkState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLinkStateAccess().getLinkStateAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getLinkStateAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLinkStateAccess().getLinkStateBoundAnyLinkParserRuleCall_2_0_0());
					}
					lv_linkState_2_1=ruleBoundAnyLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_1,
							"org.simsg.simsgl.SimSGL.BoundAnyLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLinkStateAccess().getLinkStateFreeLinkParserRuleCall_2_0_1());
					}
					lv_linkState_2_2=ruleFreeLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_2,
							"org.simsg.simsgl.SimSGL.FreeLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLinkStateAccess().getLinkStateIndexedFreeLinkParserRuleCall_2_0_2());
					}
					lv_linkState_2_3=ruleIndexedFreeLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_3,
							"org.simsg.simsgl.SimSGL.IndexedFreeLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLinkStateAccess().getLinkStateTypedFreeLinkParserRuleCall_2_0_3());
					}
					lv_linkState_2_4=ruleTypedFreeLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_4,
							"org.simsg.simsgl.SimSGL.TypedFreeLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLinkStateAccess().getLinkStateBoundAnyOfTypeLinkParserRuleCall_2_0_4());
					}
					lv_linkState_2_5=ruleBoundAnyOfTypeLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_5,
							"org.simsg.simsgl.SimSGL.BoundAnyOfTypeLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLinkStateAccess().getLinkStateBoundLinkParserRuleCall_2_0_5());
					}
					lv_linkState_2_6=ruleBoundLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_6,
							"org.simsg.simsgl.SimSGL.BoundLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLinkStateAccess().getLinkStateWhatEverParserRuleCall_2_0_6());
					}
					lv_linkState_2_7=ruleWhatEver
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_7,
							"org.simsg.simsgl.SimSGL.WhatEver");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getLinkStateAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMultiLinkState
entryRuleMultiLinkState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiLinkStateRule()); }
	iv_ruleMultiLinkState=ruleMultiLinkState
	{ $current=$iv_ruleMultiLinkState.current; }
	EOF;

// Rule MultiLinkState
ruleMultiLinkState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMultiLinkStateAccess().getMultiLinkStateAction_0(),
					$current);
			}
		)
		otherlv_1='*['
		{
			newLeafNode(otherlv_1, grammarAccess.getMultiLinkStateAccess().getAsteriskLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiLinkStateAccess().getLinkStateWhatEverParserRuleCall_2_0_0());
					}
					lv_linkState_2_1=ruleWhatEver
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_1,
							"org.simsg.simsgl.SimSGL.WhatEver");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMultiLinkStateAccess().getLinkStateFreeLinkParserRuleCall_2_0_1());
					}
					lv_linkState_2_2=ruleFreeLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_2,
							"org.simsg.simsgl.SimSGL.FreeLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMultiLinkStateAccess().getLinkStateIndexedFreeLinkParserRuleCall_2_0_2());
					}
					lv_linkState_2_3=ruleIndexedFreeLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_3,
							"org.simsg.simsgl.SimSGL.IndexedFreeLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMultiLinkStateAccess().getLinkStateTypedFreeLinkParserRuleCall_2_0_3());
					}
					lv_linkState_2_4=ruleTypedFreeLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_4,
							"org.simsg.simsgl.SimSGL.TypedFreeLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMultiLinkStateAccess().getLinkStateBoundAnyLinkParserRuleCall_2_0_4());
					}
					lv_linkState_2_5=ruleBoundAnyLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_5,
							"org.simsg.simsgl.SimSGL.BoundAnyLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMultiLinkStateAccess().getLinkStateBoundLinkParserRuleCall_2_0_5());
					}
					lv_linkState_2_6=ruleBoundLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_6,
							"org.simsg.simsgl.SimSGL.BoundLink");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMultiLinkStateAccess().getLinkStateMultiLinkParserRuleCall_2_0_6());
					}
					lv_linkState_2_7=ruleMultiLink
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiLinkStateRule());
						}
						set(
							$current,
							"linkState",
							lv_linkState_2_7,
							"org.simsg.simsgl.SimSGL.MultiLink");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getMultiLinkStateAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSingleSitePattern
entryRuleSingleSitePattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleSitePatternRule()); }
	iv_ruleSingleSitePattern=ruleSingleSitePattern
	{ $current=$iv_ruleSingleSitePattern.current; }
	EOF;

// Rule SingleSitePattern
ruleSingleSitePattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSingleSitePatternAccess().getSingleSitePatternAction_0(),
					$current);
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleSitePatternRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getSingleSitePatternAccess().getSiteSingleSiteCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleSitePatternAccess().getStateSiteStateParserRuleCall_2_0());
				}
				lv_state_2_0=ruleSiteState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleSitePatternRule());
					}
					set(
						$current,
						"state",
						lv_state_2_0,
						"org.simsg.simsgl.SimSGL.SiteState");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleSitePatternAccess().getLinkStateLinkStateParserRuleCall_3_0());
				}
				lv_linkState_3_0=ruleLinkState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleSitePatternRule());
					}
					set(
						$current,
						"linkState",
						lv_linkState_3_0,
						"org.simsg.simsgl.SimSGL.LinkState");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMultiLinkSitePattern
entryRuleMultiLinkSitePattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiLinkSitePatternRule()); }
	iv_ruleMultiLinkSitePattern=ruleMultiLinkSitePattern
	{ $current=$iv_ruleMultiLinkSitePattern.current; }
	EOF;

// Rule MultiLinkSitePattern
ruleMultiLinkSitePattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMultiLinkSitePatternAccess().getMultiLinkSitePatternAction_0(),
					$current);
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiLinkSitePatternRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getMultiLinkSitePatternAccess().getSiteMultiSiteCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiLinkSitePatternAccess().getStateSiteStateParserRuleCall_2_0());
				}
				lv_state_2_0=ruleSiteState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiLinkSitePatternRule());
					}
					set(
						$current,
						"state",
						lv_state_2_0,
						"org.simsg.simsgl.SimSGL.SiteState");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiLinkSitePatternAccess().getLinkStateMultiLinkStateParserRuleCall_3_0());
				}
				lv_linkState_3_0=ruleMultiLinkState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiLinkSitePatternRule());
					}
					set(
						$current,
						"linkState",
						lv_linkState_3_0,
						"org.simsg.simsgl.SimSGL.MultiLinkState");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSitePattern
entryRuleSitePattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSitePatternRule()); }
	iv_ruleSitePattern=ruleSitePattern
	{ $current=$iv_ruleSitePattern.current; }
	EOF;

// Rule SitePattern
ruleSitePattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSitePatternAccess().getSingleSitePatternParserRuleCall_0());
		}
		this_SingleSitePattern_0=ruleSingleSitePattern
		{
			$current = $this_SingleSitePattern_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSitePatternAccess().getMultiLinkSitePatternParserRuleCall_1());
		}
		this_MultiLinkSitePattern_1=ruleMultiLinkSitePattern
		{
			$current = $this_MultiLinkSitePattern_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSitePatterns
entryRuleSitePatterns returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSitePatternsRule()); }
	iv_ruleSitePatterns=ruleSitePatterns
	{ $current=$iv_ruleSitePatterns.current; }
	EOF;

// Rule SitePatterns
ruleSitePatterns returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSitePatternsAccess().getSitePatternsAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSitePatternsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSitePatternsAccess().getSitePatternsSitePatternParserRuleCall_2_0_0());
					}
					lv_sitePatterns_2_0=ruleSitePattern
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitePatternsRule());
						}
						add(
							$current,
							"sitePatterns",
							lv_sitePatterns_2_0,
							"org.simsg.simsgl.SimSGL.SitePattern");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getSitePatternsAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSitePatternsAccess().getSitePatternsSitePatternParserRuleCall_2_1_1_0());
						}
						lv_sitePatterns_4_0=ruleSitePattern
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSitePatternsRule());
							}
							add(
								$current,
								"sitePatterns",
								lv_sitePatterns_4_0,
								"org.simsg.simsgl.SimSGL.SitePattern");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getSitePatternsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleValidAgentPattern
entryRuleValidAgentPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValidAgentPatternRule()); }
	iv_ruleValidAgentPattern=ruleValidAgentPattern
	{ $current=$iv_ruleValidAgentPattern.current; }
	EOF;

// Rule ValidAgentPattern
ruleValidAgentPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getValidAgentPatternAccess().getValidAgentPatternAction_0(),
					$current);
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValidAgentPatternRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getValidAgentPatternAccess().getAgentAgentCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getValidAgentPatternAccess().getSitePatternsSitePatternsParserRuleCall_2_0());
				}
				lv_sitePatterns_2_0=ruleSitePatterns
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValidAgentPatternRule());
					}
					set(
						$current,
						"sitePatterns",
						lv_sitePatterns_2_0,
						"org.simsg.simsgl.SimSGL.SitePatterns");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getValidAgentPatternAccess().getStateAgentStateParserRuleCall_3_0());
				}
				lv_state_3_0=ruleAgentState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValidAgentPatternRule());
					}
					set(
						$current,
						"state",
						lv_state_3_0,
						"org.simsg.simsgl.SimSGL.AgentState");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleVoidAgentPattern
entryRuleVoidAgentPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVoidAgentPatternRule()); }
	iv_ruleVoidAgentPattern=ruleVoidAgentPattern
	{ $current=$iv_ruleVoidAgentPattern.current; }
	EOF;

// Rule VoidAgentPattern
ruleVoidAgentPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_pattern_0_0=RULE_VOID_PATTERN
			{
				newLeafNode(lv_pattern_0_0, grammarAccess.getVoidAgentPatternAccess().getPatternVOID_PATTERNTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVoidAgentPatternRule());
				}
				setWithLastConsumed(
					$current,
					"pattern",
					lv_pattern_0_0,
					"org.simsg.simsgl.SimSGL.VOID_PATTERN");
			}
		)
	)
;

// Entry rule entryRuleAgentPattern
entryRuleAgentPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAgentPatternRule()); }
	iv_ruleAgentPattern=ruleAgentPattern
	{ $current=$iv_ruleAgentPattern.current; }
	EOF;

// Rule AgentPattern
ruleAgentPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAgentPatternAccess().getValidAgentPatternParserRuleCall_0());
		}
		this_ValidAgentPattern_0=ruleValidAgentPattern
		{
			$current = $this_ValidAgentPattern_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAgentPatternAccess().getVoidAgentPatternParserRuleCall_1());
		}
		this_VoidAgentPattern_1=ruleVoidAgentPattern
		{
			$current = $this_VoidAgentPattern_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePattern
entryRulePattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternRule()); }
	iv_rulePattern=rulePattern
	{ $current=$iv_rulePattern.current; }
	EOF;

// Rule Pattern
rulePattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPatternAccess().getPatternAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternAccess().getAgentPatternsAgentPatternParserRuleCall_2_0_0());
					}
					lv_agentPatterns_2_0=ruleAgentPattern
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternRule());
						}
						add(
							$current,
							"agentPatterns",
							lv_agentPatterns_2_0,
							"org.simsg.simsgl.SimSGL.AgentPattern");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getPatternAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPatternAccess().getAgentPatternsAgentPatternParserRuleCall_2_1_1_0());
						}
						lv_agentPatterns_4_0=ruleAgentPattern
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPatternRule());
							}
							add(
								$current,
								"agentPatterns",
								lv_agentPatterns_4_0,
								"org.simsg.simsgl.SimSGL.AgentPattern");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_3());
		}
		(
			otherlv_6='['
			{
				newLeafNode(otherlv_6, grammarAccess.getPatternAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPatternAccess().getConstraintsConstraintParserRuleCall_4_1_0_0());
						}
						lv_constraints_7_0=ruleConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPatternRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_7_0,
								"org.simsg.simsgl.SimSGL.Constraint");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_8=','
					{
						newLeafNode(otherlv_8, grammarAccess.getPatternAccess().getCommaKeyword_4_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPatternAccess().getConstraintsConstraintParserRuleCall_4_1_1_1_0());
							}
							lv_constraints_9_0=ruleConstraint
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPatternRule());
								}
								add(
									$current,
									"constraints",
									lv_constraints_9_0,
									"org.simsg.simsgl.SimSGL.Constraint");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_10=']'
			{
				newLeafNode(otherlv_10, grammarAccess.getPatternAccess().getRightSquareBracketKeyword_4_2());
			}
		)?
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstraintAccess().getConstraintAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintAccess().getOperandLOperationParserRuleCall_1_0_0());
					}
					lv_operandL_1_1=ruleOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintRule());
						}
						set(
							$current,
							"operandL",
							lv_operandL_1_1,
							"org.simsg.simsgl.SimSGL.Operation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getConstraintAccess().getOperandLAttributeOperandParserRuleCall_1_0_1());
					}
					lv_operandL_1_2=ruleAttributeOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintRule());
						}
						set(
							$current,
							"operandL",
							lv_operandL_1_2,
							"org.simsg.simsgl.SimSGL.AttributeOperand");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getConstraintAccess().getOperandLNumericAssignmentParserRuleCall_1_0_2());
					}
					lv_operandL_1_3=ruleNumericAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintRule());
						}
						set(
							$current,
							"operandL",
							lv_operandL_1_3,
							"org.simsg.simsgl.SimSGL.NumericAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintAccess().getComparatorComparatorParserRuleCall_2_0());
				}
				lv_comparator_2_0=ruleComparator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintRule());
					}
					set(
						$current,
						"comparator",
						lv_comparator_2_0,
						"org.simsg.simsgl.SimSGL.Comparator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintAccess().getOperandROperationParserRuleCall_3_0_0());
					}
					lv_operandR_3_1=ruleOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintRule());
						}
						set(
							$current,
							"operandR",
							lv_operandR_3_1,
							"org.simsg.simsgl.SimSGL.Operation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getConstraintAccess().getOperandRAttributeOperandParserRuleCall_3_0_1());
					}
					lv_operandR_3_2=ruleAttributeOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintRule());
						}
						set(
							$current,
							"operandR",
							lv_operandR_3_2,
							"org.simsg.simsgl.SimSGL.AttributeOperand");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getConstraintAccess().getOperandRNumericAssignmentParserRuleCall_3_0_2());
					}
					lv_operandR_3_3=ruleNumericAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintRule());
						}
						set(
							$current,
							"operandR",
							lv_operandR_3_3,
							"org.simsg.simsgl.SimSGL.NumericAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAttributeOperand
entryRuleAttributeOperand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeOperandRule()); }
	iv_ruleAttributeOperand=ruleAttributeOperand
	{ $current=$iv_ruleAttributeOperand.current; }
	EOF;

// Rule AttributeOperand
ruleAttributeOperand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAttributeOperandAccess().getAttributeOperandGenericParserRuleCall_0());
		}
		this_AttributeOperandGeneric_0=ruleAttributeOperandGeneric
		{
			$current = $this_AttributeOperandGeneric_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAttributeOperandAccess().getAttributeOperandIdParserRuleCall_1());
		}
		this_AttributeOperandId_1=ruleAttributeOperandId
		{
			$current = $this_AttributeOperandId_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAttributeOperandGeneric
entryRuleAttributeOperandGeneric returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeOperandGenericRule()); }
	iv_ruleAttributeOperandGeneric=ruleAttributeOperandGeneric
	{ $current=$iv_ruleAttributeOperandGeneric.current; }
	EOF;

// Rule AttributeOperandGeneric
ruleAttributeOperandGeneric returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeOperandGenericAccess().getAttributeOperandGenericAction_0(),
					$current);
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeOperandGenericRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getAttributeOperandGenericAccess().getAgentAgentCrossReference_1_0());
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeOperandGenericAccess().getFullStopKeyword_2());
		}
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeOperandGenericRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getAttributeOperandGenericAccess().getAttributeAttributeCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleAttributeOperandId
entryRuleAttributeOperandId returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeOperandIdRule()); }
	iv_ruleAttributeOperandId=ruleAttributeOperandId
	{ $current=$iv_ruleAttributeOperandId.current; }
	EOF;

// Rule AttributeOperandId
ruleAttributeOperandId returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeOperandIdAccess().getAttributeOperandIdAction_0(),
					$current);
			}
		)
		(
			(
				{
					/* */
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeOperandIdRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getAttributeOperandIdAccess().getAgentAgentCrossReference_1_0());
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeOperandIdAccess().getFullStopKeyword_2());
		}
		otherlv_3='id'
		{
			newLeafNode(otherlv_3, grammarAccess.getAttributeOperandIdAccess().getIdKeyword_3());
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getOperationAccess().getOperationLeftParserRuleCall_0());
		}
		this_OperationLeft_0=ruleOperationLeft
		{
			$current = $this_OperationLeft_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getOperationAccess().getUnaryOperationParserRuleCall_1());
		}
		this_UnaryOperation_1=ruleUnaryOperation
		{
			$current = $this_UnaryOperation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationLeft
entryRuleOperationLeft returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationLeftRule()); }
	iv_ruleOperationLeft=ruleOperationLeft
	{ $current=$iv_ruleOperationLeft.current; }
	EOF;

// Rule OperationLeft
ruleOperationLeft returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationLeftAccess().getLeftUnaryOperationParserRuleCall_0_0_0());
					}
					lv_left_0_1=ruleUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationLeftRule());
						}
						set(
							$current,
							"left",
							lv_left_0_1,
							"org.simsg.simsgl.SimSGL.UnaryOperation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getOperationLeftAccess().getLeftAttributeOperandParserRuleCall_0_0_1());
					}
					lv_left_0_2=ruleAttributeOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationLeftRule());
						}
						set(
							$current,
							"left",
							lv_left_0_2,
							"org.simsg.simsgl.SimSGL.AttributeOperand");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getOperationLeftAccess().getLeftNumericAssignmentParserRuleCall_0_0_2());
					}
					lv_left_0_3=ruleNumericAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationLeftRule());
						}
						set(
							$current,
							"left",
							lv_left_0_3,
							"org.simsg.simsgl.SimSGL.NumericAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationLeftAccess().getRightOperationRightParserRuleCall_1_0());
				}
				lv_right_1_0=ruleOperationRight
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationLeftRule());
					}
					set(
						$current,
						"right",
						lv_right_1_0,
						"org.simsg.simsgl.SimSGL.OperationRight");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleOperationRight
entryRuleOperationRight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRightRule()); }
	iv_ruleOperationRight=ruleOperationRight
	{ $current=$iv_ruleOperationRight.current; }
	EOF;

// Rule OperationRight
ruleOperationRight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationRightAccess().getOperatorOperatorParserRuleCall_0_0());
				}
				lv_operator_0_0=ruleOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRightRule());
					}
					set(
						$current,
						"operator",
						lv_operator_0_0,
						"org.simsg.simsgl.SimSGL.Operator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationRightAccess().getRightOperationLeftParserRuleCall_1_0_0());
					}
					lv_right_1_1=ruleOperationLeft
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRightRule());
						}
						set(
							$current,
							"right",
							lv_right_1_1,
							"org.simsg.simsgl.SimSGL.OperationLeft");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getOperationRightAccess().getRightAttributeOperandParserRuleCall_1_0_1());
					}
					lv_right_1_2=ruleAttributeOperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRightRule());
						}
						set(
							$current,
							"right",
							lv_right_1_2,
							"org.simsg.simsgl.SimSGL.AttributeOperand");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getOperationRightAccess().getRightNumericAssignmentParserRuleCall_1_0_2());
					}
					lv_right_1_3=ruleNumericAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRightRule());
						}
						set(
							$current,
							"right",
							lv_right_1_3,
							"org.simsg.simsgl.SimSGL.NumericAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUnaryOperation
entryRuleUnaryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryOperationRule()); }
	iv_ruleUnaryOperation=ruleUnaryOperation
	{ $current=$iv_ruleUnaryOperation.current; }
	EOF;

// Rule UnaryOperation
ruleUnaryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryOperationAccess().getAbsoluteOperationParserRuleCall_0());
		}
		this_AbsoluteOperation_0=ruleAbsoluteOperation
		{
			$current = $this_AbsoluteOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryOperationAccess().getSquareRootOperationParserRuleCall_1());
		}
		this_SquareRootOperation_1=ruleSquareRootOperation
		{
			$current = $this_SquareRootOperation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbsoluteOperation
entryRuleAbsoluteOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsoluteOperationRule()); }
	iv_ruleAbsoluteOperation=ruleAbsoluteOperation
	{ $current=$iv_ruleAbsoluteOperation.current; }
	EOF;

// Rule AbsoluteOperation
ruleAbsoluteOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='|'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsoluteOperationAccess().getVerticalLineKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAbsoluteOperationAccess().getOperationLeftParserRuleCall_1());
		}
		this_OperationLeft_1=ruleOperationLeft
		{
			$current = $this_OperationLeft_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2='|'
		{
			newLeafNode(otherlv_2, grammarAccess.getAbsoluteOperationAccess().getVerticalLineKeyword_2());
		}
	)
;

// Entry rule entryRuleSquareRootOperation
entryRuleSquareRootOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSquareRootOperationRule()); }
	iv_ruleSquareRootOperation=ruleSquareRootOperation
	{ $current=$iv_ruleSquareRootOperation.current; }
	EOF;

// Rule SquareRootOperation
ruleSquareRootOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_SQRT_0=RULE_SQRT
		{
			newLeafNode(this_SQRT_0, grammarAccess.getSquareRootOperationAccess().getSQRTTerminalRuleCall_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSquareRootOperationAccess().getLeftParenthesisKeyword_1());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getSquareRootOperationAccess().getOperationLeftParserRuleCall_2());
		}
		this_OperationLeft_2=ruleOperationLeft
		{
			$current = $this_OperationLeft_2.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSquareRootOperationAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleComparator
entryRuleComparator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparatorRule()); }
	iv_ruleComparator=ruleComparator
	{ $current=$iv_ruleComparator.current; }
	EOF;

// Rule Comparator
ruleComparator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComparatorAccess().getEqualComparatorParserRuleCall_0());
		}
		this_EqualComparator_0=ruleEqualComparator
		{
			$current = $this_EqualComparator_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComparatorAccess().getGreaterComparatorParserRuleCall_1());
		}
		this_GreaterComparator_1=ruleGreaterComparator
		{
			$current = $this_GreaterComparator_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComparatorAccess().getGreaterEqualComparatorParserRuleCall_2());
		}
		this_GreaterEqualComparator_2=ruleGreaterEqualComparator
		{
			$current = $this_GreaterEqualComparator_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComparatorAccess().getLessComparatorParserRuleCall_3());
		}
		this_LessComparator_3=ruleLessComparator
		{
			$current = $this_LessComparator_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComparatorAccess().getLessEqualComparatorParserRuleCall_4());
		}
		this_LessEqualComparator_4=ruleLessEqualComparator
		{
			$current = $this_LessEqualComparator_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperator
entryRuleOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	iv_ruleOperator=ruleOperator
	{ $current=$iv_ruleOperator.current; }
	EOF;

// Rule Operator
ruleOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getOperatorAccess().getPlusOperatorParserRuleCall_0());
		}
		this_PlusOperator_0=rulePlusOperator
		{
			$current = $this_PlusOperator_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getOperatorAccess().getMinusOperatorParserRuleCall_1());
		}
		this_MinusOperator_1=ruleMinusOperator
		{
			$current = $this_MinusOperator_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getOperatorAccess().getPowOperatorParserRuleCall_2());
		}
		this_PowOperator_2=rulePowOperator
		{
			$current = $this_PowOperator_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getOperatorAccess().getMultOperatorParserRuleCall_3());
		}
		this_MultOperator_3=ruleMultOperator
		{
			$current = $this_MultOperator_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEqualComparator
entryRuleEqualComparator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualComparatorRule()); }
	iv_ruleEqualComparator=ruleEqualComparator
	{ $current=$iv_ruleEqualComparator.current; }
	EOF;

// Rule EqualComparator
ruleEqualComparator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getEqualComparatorAccess().getEqualComparatorAction_0(),
					$current);
			}
		)
		this_EQUALS_1=RULE_EQUALS
		{
			newLeafNode(this_EQUALS_1, grammarAccess.getEqualComparatorAccess().getEQUALSTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleGreaterComparator
entryRuleGreaterComparator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreaterComparatorRule()); }
	iv_ruleGreaterComparator=ruleGreaterComparator
	{ $current=$iv_ruleGreaterComparator.current; }
	EOF;

// Rule GreaterComparator
ruleGreaterComparator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getGreaterComparatorAccess().getGreaterComparatorAction_0(),
					$current);
			}
		)
		this_GREATER_1=RULE_GREATER
		{
			newLeafNode(this_GREATER_1, grammarAccess.getGreaterComparatorAccess().getGREATERTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleGreaterEqualComparator
entryRuleGreaterEqualComparator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGreaterEqualComparatorRule()); }
	iv_ruleGreaterEqualComparator=ruleGreaterEqualComparator
	{ $current=$iv_ruleGreaterEqualComparator.current; }
	EOF;

// Rule GreaterEqualComparator
ruleGreaterEqualComparator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getGreaterEqualComparatorAccess().getGreaterEqualComparatorAction_0(),
					$current);
			}
		)
		this_GREATER_EQUAL_1=RULE_GREATER_EQUAL
		{
			newLeafNode(this_GREATER_EQUAL_1, grammarAccess.getGreaterEqualComparatorAccess().getGREATER_EQUALTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleLessComparator
entryRuleLessComparator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLessComparatorRule()); }
	iv_ruleLessComparator=ruleLessComparator
	{ $current=$iv_ruleLessComparator.current; }
	EOF;

// Rule LessComparator
ruleLessComparator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLessComparatorAccess().getLessComparatorAction_0(),
					$current);
			}
		)
		this_LESS_1=RULE_LESS
		{
			newLeafNode(this_LESS_1, grammarAccess.getLessComparatorAccess().getLESSTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleLessEqualComparator
entryRuleLessEqualComparator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLessEqualComparatorRule()); }
	iv_ruleLessEqualComparator=ruleLessEqualComparator
	{ $current=$iv_ruleLessEqualComparator.current; }
	EOF;

// Rule LessEqualComparator
ruleLessEqualComparator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLessEqualComparatorAccess().getLessEqualComparatorAction_0(),
					$current);
			}
		)
		this_LESS_EQUAL_1=RULE_LESS_EQUAL
		{
			newLeafNode(this_LESS_EQUAL_1, grammarAccess.getLessEqualComparatorAccess().getLESS_EQUALTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulePlusOperator
entryRulePlusOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOperatorRule()); }
	iv_rulePlusOperator=rulePlusOperator
	{ $current=$iv_rulePlusOperator.current; }
	EOF;

// Rule PlusOperator
rulePlusOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPlusOperatorAccess().getPlusOperatorAction_0(),
					$current);
			}
		)
		this_PLUS_1=RULE_PLUS
		{
			newLeafNode(this_PLUS_1, grammarAccess.getPlusOperatorAccess().getPLUSTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleMinusOperator
entryRuleMinusOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMinusOperatorRule()); }
	iv_ruleMinusOperator=ruleMinusOperator
	{ $current=$iv_ruleMinusOperator.current; }
	EOF;

// Rule MinusOperator
ruleMinusOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMinusOperatorAccess().getMinusOperatorAction_0(),
					$current);
			}
		)
		this_MINUS_1=RULE_MINUS
		{
			newLeafNode(this_MINUS_1, grammarAccess.getMinusOperatorAccess().getMINUSTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulePowOperator
entryRulePowOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPowOperatorRule()); }
	iv_rulePowOperator=rulePowOperator
	{ $current=$iv_rulePowOperator.current; }
	EOF;

// Rule PowOperator
rulePowOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPowOperatorAccess().getPowOperatorAction_0(),
					$current);
			}
		)
		this_POW_1=RULE_POW
		{
			newLeafNode(this_POW_1, grammarAccess.getPowOperatorAccess().getPOWTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleMultOperator
entryRuleMultOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultOperatorRule()); }
	iv_ruleMultOperator=ruleMultOperator
	{ $current=$iv_ruleMultOperator.current; }
	EOF;

// Rule MultOperator
ruleMultOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMultOperatorAccess().getMultOperatorAction_0(),
					$current);
			}
		)
		this_MULT_1=RULE_MULT
		{
			newLeafNode(this_MULT_1, grammarAccess.getMultOperatorAccess().getMULTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleObservation
entryRuleObservation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObservationRule()); }
	iv_ruleObservation=ruleObservation
	{ $current=$iv_ruleObservation.current; }
	EOF;

// Rule Observation
ruleObservation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='obs'
		{
			newLeafNode(otherlv_0, grammarAccess.getObservationAccess().getObsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getObservationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObservationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getObservationAccess().getObservationPatternPatternAssignmentParserRuleCall_2_0());
				}
				lv_observationPattern_2_0=rulePatternAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObservationRule());
					}
					set(
						$current,
						"observationPattern",
						lv_observationPattern_2_0,
						"org.simsg.simsgl.SimSGL.PatternAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNumericFromLiteral
entryRuleNumericFromLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericFromLiteralRule()); }
	iv_ruleNumericFromLiteral=ruleNumericFromLiteral
	{ $current=$iv_ruleNumericFromLiteral.current; }
	EOF;

// Rule NumericFromLiteral
ruleNumericFromLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNumericFromLiteralAccess().getValueArithmeticValueParserRuleCall_0());
			}
			lv_value_0_0=ruleArithmeticValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNumericFromLiteralRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.simsg.simsgl.SimSGL.ArithmeticValue");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNumericFromVariable
entryRuleNumericFromVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericFromVariableRule()); }
	iv_ruleNumericFromVariable=ruleNumericFromVariable
	{ $current=$iv_ruleNumericFromVariable.current; }
	EOF;

// Rule NumericFromVariable
ruleNumericFromVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumericFromVariableRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getNumericFromVariableAccess().getValueVarArithmeticVariableCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleNumericAssignment
entryRuleNumericAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumericAssignmentRule()); }
	iv_ruleNumericAssignment=ruleNumericAssignment
	{ $current=$iv_ruleNumericAssignment.current; }
	EOF;

// Rule NumericAssignment
ruleNumericAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNumericAssignmentAccess().getNumericFromLiteralParserRuleCall_0());
		}
		this_NumericFromLiteral_0=ruleNumericFromLiteral
		{
			$current = $this_NumericFromLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNumericAssignmentAccess().getNumericFromVariableParserRuleCall_1());
		}
		this_NumericFromVariable_1=ruleNumericFromVariable
		{
			$current = $this_NumericFromVariable_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInitial
entryRuleInitial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialRule()); }
	iv_ruleInitial=ruleInitial
	{ $current=$iv_ruleInitial.current; }
	EOF;

// Rule Initial
ruleInitial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='init'
		{
			newLeafNode(otherlv_0, grammarAccess.getInitialAccess().getInitKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInitialAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitialRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInitialAccess().getCountNumericAssignmentParserRuleCall_2_0());
				}
				lv_count_2_0=ruleNumericAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitialRule());
					}
					set(
						$current,
						"count",
						lv_count_2_0,
						"org.simsg.simsgl.SimSGL.NumericAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInitialAccess().getInitialPatternPatternAssignmentParserRuleCall_3_0());
				}
				lv_initialPattern_3_0=rulePatternAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitialRule());
					}
					set(
						$current,
						"initialPattern",
						lv_initialPattern_3_0,
						"org.simsg.simsgl.SimSGL.PatternAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAssignFromPattern
entryRuleAssignFromPattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignFromPatternRule()); }
	iv_ruleAssignFromPattern=ruleAssignFromPattern
	{ $current=$iv_ruleAssignFromPattern.current; }
	EOF;

// Rule AssignFromPattern
ruleAssignFromPattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAssignFromPatternAccess().getPatternPatternParserRuleCall_0());
			}
			lv_pattern_0_0=rulePattern
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getAssignFromPatternRule());
				}
				set(
					$current,
					"pattern",
					lv_pattern_0_0,
					"org.simsg.simsgl.SimSGL.Pattern");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAssignFromVariable
entryRuleAssignFromVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignFromVariableRule()); }
	iv_ruleAssignFromVariable=ruleAssignFromVariable
	{ $current=$iv_ruleAssignFromVariable.current; }
	EOF;

// Rule AssignFromVariable
ruleAssignFromVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAssignFromVariableRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getAssignFromVariableAccess().getPatternVarPatternVariableCrossReference_0());
			}
		)
	)
;

// Entry rule entryRulePatternAssignment
entryRulePatternAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternAssignmentRule()); }
	iv_rulePatternAssignment=rulePatternAssignment
	{ $current=$iv_rulePatternAssignment.current; }
	EOF;

// Rule PatternAssignment
rulePatternAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPatternAssignmentAccess().getAssignFromPatternParserRuleCall_0());
		}
		this_AssignFromPattern_0=ruleAssignFromPattern
		{
			$current = $this_AssignFromPattern_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPatternAssignmentAccess().getAssignFromVariableParserRuleCall_1());
		}
		this_AssignFromVariable_1=ruleAssignFromVariable
		{
			$current = $this_AssignFromVariable_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRuleVariables
entryRuleRuleVariables returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleVariablesRule()); }
	iv_ruleRuleVariables=ruleRuleVariables
	{ $current=$iv_ruleRuleVariables.current; }
	EOF;

// Rule RuleVariables
ruleRuleVariables returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleVariablesAccess().getVariablesNumericAssignmentParserRuleCall_0_0());
				}
				lv_variables_0_0=ruleNumericAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleVariablesRule());
					}
					add(
						$current,
						"variables",
						lv_variables_0_0,
						"org.simsg.simsgl.SimSGL.NumericAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getRuleVariablesAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleVariablesAccess().getVariablesNumericAssignmentParserRuleCall_1_1_0());
					}
					lv_variables_2_0=ruleNumericAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleVariablesRule());
						}
						add(
							$current,
							"variables",
							lv_variables_2_0,
							"org.simsg.simsgl.SimSGL.NumericAssignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnidirectionalRule
entryRuleUnidirectionalRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnidirectionalRuleRule()); }
	iv_ruleUnidirectionalRule=ruleUnidirectionalRule
	{ $current=$iv_ruleUnidirectionalRule.current; }
	EOF;

// Rule UnidirectionalRule
ruleUnidirectionalRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUnidirectionalRuleAccess().getLhsPatternAssignmentParserRuleCall_0_0());
				}
				lv_lhs_0_0=rulePatternAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnidirectionalRuleRule());
					}
					set(
						$current,
						"lhs",
						lv_lhs_0_0,
						"org.simsg.simsgl.SimSGL.PatternAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_operator_1_0=RULE_UNI
				{
					newLeafNode(lv_operator_1_0, grammarAccess.getUnidirectionalRuleAccess().getOperatorUNITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnidirectionalRuleRule());
					}
					setWithLastConsumed(
						$current,
						"operator",
						lv_operator_1_0,
						"org.simsg.simsgl.SimSGL.UNI");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnidirectionalRuleAccess().getRhsPatternAssignmentParserRuleCall_2_0());
				}
				lv_rhs_2_0=rulePatternAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnidirectionalRuleRule());
					}
					set(
						$current,
						"rhs",
						lv_rhs_2_0,
						"org.simsg.simsgl.SimSGL.PatternAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_AT_3=RULE_AT
		{
			newLeafNode(this_AT_3, grammarAccess.getUnidirectionalRuleAccess().getATTerminalRuleCall_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getUnidirectionalRuleAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnidirectionalRuleAccess().getVariablesRuleVariablesParserRuleCall_5_0());
				}
				lv_variables_5_0=ruleRuleVariables
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnidirectionalRuleRule());
					}
					set(
						$current,
						"variables",
						lv_variables_5_0,
						"org.simsg.simsgl.SimSGL.RuleVariables");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getUnidirectionalRuleAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleBidirectionalRule
entryRuleBidirectionalRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBidirectionalRuleRule()); }
	iv_ruleBidirectionalRule=ruleBidirectionalRule
	{ $current=$iv_ruleBidirectionalRule.current; }
	EOF;

// Rule BidirectionalRule
ruleBidirectionalRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBidirectionalRuleAccess().getLhsPatternAssignmentParserRuleCall_0_0());
				}
				lv_lhs_0_0=rulePatternAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBidirectionalRuleRule());
					}
					set(
						$current,
						"lhs",
						lv_lhs_0_0,
						"org.simsg.simsgl.SimSGL.PatternAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_operator_1_0=RULE_BI
				{
					newLeafNode(lv_operator_1_0, grammarAccess.getBidirectionalRuleAccess().getOperatorBITerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBidirectionalRuleRule());
					}
					setWithLastConsumed(
						$current,
						"operator",
						lv_operator_1_0,
						"org.simsg.simsgl.SimSGL.BI");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBidirectionalRuleAccess().getRhsPatternAssignmentParserRuleCall_2_0());
				}
				lv_rhs_2_0=rulePatternAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBidirectionalRuleRule());
					}
					set(
						$current,
						"rhs",
						lv_rhs_2_0,
						"org.simsg.simsgl.SimSGL.PatternAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_AT_3=RULE_AT
		{
			newLeafNode(this_AT_3, grammarAccess.getBidirectionalRuleAccess().getATTerminalRuleCall_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getBidirectionalRuleAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBidirectionalRuleAccess().getVariablesRuleVariablesParserRuleCall_5_0());
				}
				lv_variables_5_0=ruleRuleVariables
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBidirectionalRuleRule());
					}
					set(
						$current,
						"variables",
						lv_variables_5_0,
						"org.simsg.simsgl.SimSGL.RuleVariables");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getBidirectionalRuleAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRuleBody
entryRuleRuleBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleBodyRule()); }
	iv_ruleRuleBody=ruleRuleBody
	{ $current=$iv_ruleRuleBody.current; }
	EOF;

// Rule RuleBody
ruleRuleBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRuleBodyAccess().getUnidirectionalRuleParserRuleCall_0());
		}
		this_UnidirectionalRule_0=ruleUnidirectionalRule
		{
			$current = $this_UnidirectionalRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRuleBodyAccess().getBidirectionalRuleParserRuleCall_1());
		}
		this_BidirectionalRule_1=ruleBidirectionalRule
		{
			$current = $this_BidirectionalRule_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRuleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getRuleRuleBodyParserRuleCall_2_0());
				}
				lv_rule_2_0=ruleRuleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"rule",
						lv_rule_2_0,
						"org.simsg.simsgl.SimSGL.RuleBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIterations
entryRuleIterations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIterationsRule()); }
	iv_ruleIterations=ruleIterations
	{ $current=$iv_ruleIterations.current; }
	EOF;

// Rule Iterations
ruleIterations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='iterations'
		{
			newLeafNode(otherlv_0, grammarAccess.getIterationsAccess().getIterationsKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getIterationsAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIterationsAccess().getValueUnsignedIntegerParserRuleCall_2_0());
				}
				lv_value_2_0=ruleUnsignedInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIterationsRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.simsg.simsgl.SimSGL.UnsignedInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTime
entryRuleTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeRule()); }
	iv_ruleTime=ruleTime
	{ $current=$iv_ruleTime.current; }
	EOF;

// Rule Time
ruleTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='time'
		{
			newLeafNode(otherlv_0, grammarAccess.getTimeAccess().getTimeKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getTimeAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTimeAccess().getValueUnsignedIntegerParserRuleCall_2_0());
				}
				lv_value_2_0=ruleUnsignedInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTimeRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.simsg.simsgl.SimSGL.UnsignedInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePopulation
entryRulePopulation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPopulationRule()); }
	iv_rulePopulation=rulePopulation
	{ $current=$iv_rulePopulation.current; }
	EOF;

// Rule Population
rulePopulation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='|'
		{
			newLeafNode(otherlv_0, grammarAccess.getPopulationAccess().getVerticalLineKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPopulationAccess().getPaPatternAssignmentParserRuleCall_1_0());
				}
				lv_pa_1_0=rulePatternAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPopulationRule());
					}
					set(
						$current,
						"pa",
						lv_pa_1_0,
						"org.simsg.simsgl.SimSGL.PatternAssignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='|'
		{
			newLeafNode(otherlv_2, grammarAccess.getPopulationAccess().getVerticalLineKeyword_2());
		}
		otherlv_3='==>'
		{
			newLeafNode(otherlv_3, grammarAccess.getPopulationAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPopulationAccess().getValueUnsignedIntegerParserRuleCall_4_0());
				}
				lv_value_4_0=ruleUnsignedInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPopulationRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"org.simsg.simsgl.SimSGL.UnsignedInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTerminationCondition
entryRuleTerminationCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTerminationConditionRule()); }
	iv_ruleTerminationCondition=ruleTerminationCondition
	{ $current=$iv_ruleTerminationCondition.current; }
	EOF;

// Rule TerminationCondition
ruleTerminationCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTerminationConditionAccess().getIterationsParserRuleCall_0());
		}
		this_Iterations_0=ruleIterations
		{
			$current = $this_Iterations_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTerminationConditionAccess().getTimeParserRuleCall_1());
		}
		this_Time_1=ruleTime
		{
			$current = $this_Time_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTerminationConditionAccess().getPopulationParserRuleCall_2());
		}
		this_Population_2=rulePopulation
		{
			$current = $this_Population_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTerminate
entryRuleTerminate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTerminateRule()); }
	iv_ruleTerminate=ruleTerminate
	{ $current=$iv_ruleTerminate.current; }
	EOF;

// Rule Terminate
ruleTerminate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='terminate'
		{
			newLeafNode(otherlv_0, grammarAccess.getTerminateAccess().getTerminateKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTerminateAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTerminateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTerminateAccess().getConditionTerminationConditionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleTerminationCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTerminateRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"org.simsg.simsgl.SimSGL.TerminationCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_AT : '@';

RULE_BI : '<->';

RULE_UNI : '->';

RULE_VOID_PATTERN : 'void';

RULE_BOUND_LINK : 'bound';

RULE_FREE_LINK : 'free';

RULE_WHATEVER_LINK : '?';

RULE_EXPONENT : 'E';

RULE_INT : '0'..'9' ('0'..'9')*;

RULE_FLOAT_ATTRIBUTE : 'FLOAT';

RULE_INT_ATTRIBUTE : 'INT';

RULE_EQUALS : '==';

RULE_GREATER : '>';

RULE_GREATER_EQUAL : '>=';

RULE_LESS : '<';

RULE_LESS_EQUAL : '<=';

RULE_PLUS : '+';

RULE_MINUS : '-';

RULE_POW : '^';

RULE_MULT : '*';

RULE_SQRT : 'sqrt';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
